<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>pxz</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-04-24T08:05:55.814Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>peng</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>作业4</title>
    <link href="http://yoursite.com/2020/04/24/%E4%BD%9C%E4%B8%9A4/"/>
    <id>http://yoursite.com/2020/04/24/%E4%BD%9C%E4%B8%9A4/</id>
    <published>2020-04-24T08:05:55.812Z</published>
    <updated>2020-04-24T08:05:55.814Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-下面为抓取百度热点的过程"><a href="#1-下面为抓取百度热点的过程" class="headerlink" title="1.下面为抓取百度热点的过程"></a><strong>1.下面为抓取百度热点的过程</strong></h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">crawler</span><span class="params">()</span>:</span></span><br><span class="line">    url = <span class="string">"http://top.baidu.com/buzz?b=341&amp;c=513&amp;fr=topbuzz_b1"</span></span><br><span class="line">    headers= &#123;</span><br><span class="line">       <span class="string">"User-Agent"</span>:<span class="string">" Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.113 Safari/537.36"</span></span><br><span class="line">    &#125;</span><br><span class="line">    response = requests.get(url,headers)</span><br><span class="line">    html = response.content.decode(<span class="string">"gb2312"</span>)</span><br><span class="line">    <span class="keyword">return</span> html</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">parser</span><span class="params">()</span>:</span></span><br><span class="line">    pattern = <span class="string">'&lt;td\sclass="keyword"&gt;\s+&lt;a.*?&gt;(.*?)&lt;/a&gt;'</span></span><br><span class="line">    text = crawler()</span><br><span class="line">    result = re.findall(pattern,text)</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">()</span>:</span></span><br><span class="line">    res = parser()</span><br><span class="line">    <span class="keyword">for</span> index,msg <span class="keyword">in</span> enumerate(res,<span class="number">1</span>):</span><br><span class="line">        print(<span class="string">f"<span class="subst">&#123;index&#125;</span>,<span class="subst">&#123;msg&#125;</span>"</span>)</span><br><span class="line">        </span><br><span class="line">run()</span><br></pre></td></tr></table></figure><pre><code>1,湖北高考时间公布2,李沁挽张若昀3,演员张冲霄去世4,猫和老鼠导演去世5,北京上空出现日晕6,全球确诊逾231万7,美国确诊超69万8,德国新增确诊2078例9,郎朗吉娜合约曝光10,辽代白塔快塌了11,英国首相病情恶化12,大使痛批闯关回国13,小贝为鹿晗庆生14,袁咏仪在线辟谣15,云南丽江森林火灾16,大衣哥被踹门17,布莱恩丹内利去世18,杨幂红秀封面19,互联网女皇报告20,新型冠状病毒21,北京双彩虹22,李晨名誉案败诉23,霉霉取消演唱会24,美死亡病例超4万25,俄罗斯确诊破4万26,武汉卓尔回家27,里皮声援于汉超28,浙江高校开学时间29,屈楚萧恋情30,贾乃亮被曝新恋情31,张伟丽今日回国32,欠薪球员外卖为生33,汪峰今天发新专辑34,window1035,百度指数36,大象模型戴口罩37,滚石乐队隔空重聚38,黑龙江等多地降雪39,美国确诊超60万40,加拿大枪击事件41,北京大风黄色预警42,吉林东丰仓库爆炸43,五一放假安排44,全国企业信用信息公示系统45,魔兽世界怀旧服46,徐大sao回应诈捐47,世界读书日48,一线城市房价下跌49,鲍毓明养女发声50,黑龙江新增16例</code></pre><h4 id="2-提取出http-www-baidu-com-s-wd-ip-页面的ip信息"><a href="#2-提取出http-www-baidu-com-s-wd-ip-页面的ip信息" class="headerlink" title="2.提取出http://www.baidu.com/s?wd=ip 页面的ip信息"></a><strong>2.提取出<a href="http://www.baidu.com/s?wd=ip" target="_blank" rel="noopener">http://www.baidu.com/s?wd=ip</a> 页面的ip信息</strong></h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">crawler</span><span class="params">()</span>:</span></span><br><span class="line">    url = <span class="string">"http://www.baidu.com/s?wd=ip"</span></span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">"User-Agent"</span>:<span class="string">" Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.113 Safari/537.36"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    response = requests.get(url,headers)</span><br><span class="line">    html = response.content.decode(<span class="string">"utf-8"</span>)</span><br><span class="line">    <span class="keyword">return</span> html</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">()</span>:</span></span><br><span class="line">    text = crawler()</span><br><span class="line">    pattern = <span class="string">"(([1-9]?\d|1\d&#123;2&#125;|2[0-4]\d|25[0-5]).)&#123;3&#125;([1-9]?\d|1\d&#123;2&#125;|2[0-4]\d|25[0-5])"</span></span><br><span class="line">    ip = re.findall(pattern,text)</span><br><span class="line">    <span class="keyword">return</span> ip</span><br><span class="line"></span><br><span class="line">func()</span><br></pre></td></tr></table></figure><pre><code>[(&apos;291&apos;, &apos;29&apos;, &apos;52&apos;), (&apos;12&apos;, &apos;1&apos;, &apos;1&apos;), (&apos;0 &apos;, &apos;0&apos;, &apos;10&apos;), (&apos;0 &apos;, &apos;0&apos;, &apos;16&apos;), (&apos;0 &apos;, &apos;0&apos;, &apos;10&apos;), (&apos;12&apos;, &apos;1&apos;, &apos;1&apos;), (&apos;0 &apos;, &apos;0&apos;, &apos;12&apos;), (&apos;12&apos;, &apos;1&apos;, &apos;1&apos;), (&apos;0 &apos;, &apos;0&apos;, &apos;12&apos;), (&apos;12&apos;, &apos;1&apos;, &apos;1&apos;), (&apos;0 &apos;, &apos;0&apos;, &apos;50&apos;), (&apos;0 &apos;, &apos;0&apos;, &apos;12&apos;), (&apos;13&apos;, &apos;1&apos;, &apos;0&apos;), (&apos;7b&apos;, &apos;7&apos;, &apos;6&apos;), (&apos;0 &apos;, &apos;0&apos;, &apos;12&apos;), (&apos;25&apos;, &apos;2&apos;, &apos;5&apos;), (&apos;754&apos;, &apos;75&apos;, &apos;0&apos;), (&apos;754&apos;, &apos;75&apos;, &apos;0&apos;), (&apos;754&apos;, &apos;75&apos;, &apos;0&apos;), (&apos;754&apos;, &apos;75&apos;, &apos;0&apos;), (&apos;754&apos;, &apos;75&apos;, &apos;0&apos;), (&apos;333&apos;, &apos;33&apos;, &apos;33&apos;), (&apos;333&apos;, &apos;33&apos;, &apos;33&apos;), (&apos;666&apos;, &apos;66&apos;, &apos;67&apos;), (&apos;333&apos;, &apos;33&apos;, &apos;33&apos;), (&apos;666&apos;, &apos;66&apos;, &apos;67&apos;), (&apos;714&apos;, &apos;71&apos;, &apos;29&apos;), (&apos;0,&apos;, &apos;0&apos;, &apos;0&apos;), (&apos;0,&apos;, &apos;0&apos;, &apos;0&apos;), (&apos;0,&apos;, &apos;0&apos;, &apos;0&apos;), (&apos;0,&apos;, &apos;0&apos;, &apos;0&apos;), (&apos;0,&apos;, &apos;0&apos;, &apos;0&apos;), (&apos;666&apos;, &apos;66&apos;, &apos;67&apos;), (&apos;0,&apos;, &apos;0&apos;, &apos;0&apos;), (&apos;666&apos;, &apos;66&apos;, &apos;67&apos;), (&apos;0,&apos;, &apos;0&apos;, &apos;0&apos;), (&apos;666&apos;, &apos;66&apos;, &apos;67&apos;), (&apos;333&apos;, &apos;33&apos;, &apos;33&apos;), (&apos;672&apos;, &apos;67&apos;, &apos;32&apos;), (&apos;672&apos;, &apos;67&apos;, &apos;32&apos;), (&apos;25&apos;, &apos;2&apos;, &apos;5&apos;), (&apos;25&apos;, &apos;2&apos;, &apos;5&apos;), (&apos;25&apos;, &apos;2&apos;, &apos;5&apos;), (&apos;9e&apos;, &apos;9&apos;, &apos;0&apos;), (&apos;9a&apos;, &apos;9&apos;, &apos;3&apos;), (&apos;9e&apos;, &apos;9&apos;, &apos;0&apos;), (&apos;9a&apos;, &apos;9&apos;, &apos;3&apos;), (&apos;9e&apos;, &apos;9&apos;, &apos;0&apos;), (&apos;9a&apos;, &apos;9&apos;, &apos;3&apos;), (&apos;0*&apos;, &apos;0&apos;, &apos;10&apos;), (&apos;672&apos;, &apos;67&apos;, &apos;9&apos;), (&apos;168&apos;, &apos;16&apos;, &apos;1&apos;), (&apos;289&apos;, &apos;28&apos;, &apos;91&apos;), (&apos;338&apos;, &apos;33&apos;, &apos;86&apos;), (&apos;246&apos;, &apos;24&apos;, &apos;98&apos;), (&apos;208&apos;, &apos;20&apos;, &apos;50&apos;), (&apos;58,&apos;, &apos;58&apos;, &apos;15&apos;), (&apos;2_&apos;, &apos;2&apos;, &apos;30&apos;), (&apos;5_&apos;, &apos;5&apos;, &apos;58&apos;), (&apos;717&apos;, &apos;71&apos;, &apos;0&apos;), (&apos;161&apos;, &apos;16&apos;, &apos;3&apos;), (&apos;07&apos;, &apos;0&apos;, &apos;77&apos;), (&apos;283&apos;, &apos;28&apos;, &apos;85&apos;), (&apos;58,&apos;, &apos;58&apos;, &apos;15&apos;), (&apos;16_&apos;, &apos;16&apos;, &apos;31&apos;), (&apos;26_&apos;, &apos;26&apos;, &apos;58&apos;), (&apos;178&apos;, &apos;17&apos;, &apos;4&apos;), (&apos;433&apos;, &apos;43&apos;, &apos;4&apos;), (&apos;176&apos;, &apos;17&apos;, &apos;0&apos;), (&apos;00&apos;, &apos;0&apos;, &apos;0&apos;), (&apos;00&apos;, &apos;0&apos;, &apos;0&apos;), (&apos;00&apos;, &apos;0&apos;, &apos;0&apos;), (&apos;00&apos;, &apos;0&apos;, &apos;0&apos;), (&apos;00&apos;, &apos;0&apos;, &apos;0&apos;), (&apos;00&apos;, &apos;0&apos;, &apos;0&apos;), (&apos;9e&apos;, &apos;9&apos;, &apos;0&apos;), (&apos;9a&apos;, &apos;9&apos;, &apos;3&apos;), (&apos;9e&apos;, &apos;9&apos;, &apos;0&apos;), (&apos;9a&apos;, &apos;9&apos;, &apos;3&apos;), (&apos;59&apos;, &apos;5&apos;, &apos;2&apos;), (&apos;88,&apos;, &apos;88&apos;, &apos;88&apos;), (&apos;25&apos;, &apos;2&apos;, &apos;5&apos;), (&apos;25&apos;, &apos;2&apos;, &apos;5&apos;), (&apos;25&apos;, &apos;2&apos;, &apos;5&apos;), (&apos;25&apos;, &apos;2&apos;, &apos;5&apos;), (&apos;10&apos;, &apos;1&apos;, &apos;0&apos;), (&apos;9e&apos;, &apos;9&apos;, &apos;0&apos;), (&apos;9a&apos;, &apos;9&apos;, &apos;3&apos;), (&apos;9e&apos;, &apos;9&apos;, &apos;0&apos;), (&apos;9a&apos;, &apos;9&apos;, &apos;3&apos;), (&apos;9e&apos;, &apos;9&apos;, &apos;0&apos;), (&apos;9a&apos;, &apos;9&apos;, &apos;30&apos;), (&apos;00&apos;, &apos;0&apos;, &apos;65&apos;), (&apos;309&apos;, &apos;30&apos;, &apos;74&apos;), (&apos;313&apos;, &apos;31&apos;, &apos;26&apos;), (&apos;314&apos;, &apos;31&apos;, &apos;26&apos;), (&apos;308&apos;, &apos;30&apos;, &apos;24&apos;), (&apos;221&apos;, &apos;22&apos;, &apos;59&apos;), (&apos;487&apos;, &apos;48&apos;, &apos;2&apos;), (&apos;487&apos;, &apos;48&apos;, &apos;2&apos;), (&apos;119&apos;, &apos;11&apos;, &apos;8&apos;), (&apos;45&apos;, &apos;4&apos;, &apos;6&apos;), (&apos;55&apos;, &apos;5&apos;, &apos;0&apos;), (&apos;816&apos;, &apos;81&apos;, &apos;7&apos;), (&apos;674&apos;, &apos;67&apos;, &apos;6&apos;), (&apos;301&apos;, &apos;30&apos;, &apos;5&apos;), (&apos;654&apos;, &apos;65&apos;, &apos;5&apos;), (&apos;928&apos;, &apos;92&apos;, &apos;1&apos;), (&apos;85&apos;, &apos;8&apos;, &apos;5&apos;), (&apos;260&apos;, &apos;26&apos;, &apos;8&apos;), (&apos;648&apos;, &apos;64&apos;, &apos;5&apos;), (&apos;453&apos;, &apos;45&apos;, &apos;4&apos;), (&apos;544&apos;, &apos;54&apos;, &apos;1&apos;), (&apos;253&apos;, &apos;25&apos;, &apos;3&apos;), (&apos;995&apos;, &apos;99&apos;, &apos;6&apos;), (&apos;583&apos;, &apos;58&apos;, &apos;4&apos;), (&apos;588&apos;, &apos;58&apos;, &apos;1&apos;), (&apos;582&apos;, &apos;58&apos;, &apos;6&apos;), (&apos;669&apos;, &apos;66&apos;, &apos;3&apos;), (&apos;939&apos;, &apos;93&apos;, &apos;45&apos;), (&apos;01&apos;, &apos;0&apos;, &apos;42&apos;), (&apos;913&apos;, &apos;91&apos;, &apos;43&apos;), (&apos;46_&apos;, &apos;46&apos;, &apos;29&apos;), (&apos;10&apos;, &apos;1&apos;, &apos;5&apos;), (&apos;01&apos;, &apos;0&apos;, &apos;49&apos;), (&apos;2b&apos;, &apos;2&apos;, &apos;6&apos;), (&apos;01&apos;, &apos;0&apos;, &apos;49&apos;), (&apos;2b&apos;, &apos;2&apos;, &apos;6&apos;), (&apos;119&apos;, &apos;11&apos;, &apos;8&apos;), (&apos;45&apos;, &apos;4&apos;, &apos;6&apos;), (&apos;119&apos;, &apos;11&apos;, &apos;8&apos;), (&apos;45&apos;, &apos;4&apos;, &apos;6&apos;), (&apos;01&apos;, &apos;0&apos;, &apos;49&apos;), (&apos;2b&apos;, &apos;2&apos;, &apos;6&apos;), (&apos;01&apos;, &apos;0&apos;, &apos;49&apos;), (&apos;2b&apos;, &apos;2&apos;, &apos;6&apos;), (&apos;6b&apos;, &apos;6&apos;, &apos;91&apos;), (&apos;288&apos;, &apos;28&apos;, &apos;35&apos;), (&apos;6b&apos;, &apos;6&apos;, &apos;91&apos;), (&apos;288&apos;, &apos;28&apos;, &apos;35&apos;), (&apos;55&apos;, &apos;5&apos;, &apos;0&apos;), (&apos;816&apos;, &apos;81&apos;, &apos;7&apos;), (&apos;55&apos;, &apos;5&apos;, &apos;0&apos;), (&apos;816&apos;, &apos;81&apos;, &apos;7&apos;), (&apos;6b&apos;, &apos;6&apos;, &apos;91&apos;), (&apos;288&apos;, &apos;28&apos;, &apos;35&apos;), (&apos;6b&apos;, &apos;6&apos;, &apos;91&apos;), (&apos;288&apos;, &apos;28&apos;, &apos;35&apos;), (&apos;189&apos;, &apos;18&apos;, &apos;31&apos;), (&apos;189&apos;, &apos;18&apos;, &apos;31&apos;), (&apos;674&apos;, &apos;67&apos;, &apos;6&apos;), (&apos;301&apos;, &apos;30&apos;, &apos;5&apos;), (&apos;674&apos;, &apos;67&apos;, &apos;6&apos;), (&apos;301&apos;, &apos;30&apos;, &apos;5&apos;), (&apos;189&apos;, &apos;18&apos;, &apos;31&apos;), (&apos;189&apos;, &apos;18&apos;, &apos;31&apos;), (&apos;6c&apos;, &apos;6&apos;, &apos;97&apos;), (&apos;63&apos;, &apos;6&apos;, &apos;9&apos;), (&apos;79a&apos;, &apos;79&apos;, &apos;3&apos;), (&apos;6c&apos;, &apos;6&apos;, &apos;97&apos;), (&apos;63&apos;, &apos;6&apos;, &apos;9&apos;), (&apos;79a&apos;, &apos;79&apos;, &apos;3&apos;), (&apos;654&apos;, &apos;65&apos;, &apos;5&apos;), (&apos;928&apos;, &apos;92&apos;, &apos;1&apos;), (&apos;654&apos;, &apos;65&apos;, &apos;5&apos;), (&apos;928&apos;, &apos;92&apos;, &apos;1&apos;), (&apos;6c&apos;, &apos;6&apos;, &apos;97&apos;), (&apos;63&apos;, &apos;6&apos;, &apos;9&apos;), (&apos;79a&apos;, &apos;79&apos;, &apos;3&apos;), (&apos;6c&apos;, &apos;6&apos;, &apos;97&apos;), (&apos;63&apos;, &apos;6&apos;, &apos;9&apos;), (&apos;79a&apos;, &apos;79&apos;, &apos;3&apos;), (&apos;6f&apos;, &apos;6&apos;, &apos;54&apos;), (&apos;810&apos;, &apos;81&apos;, &apos;1&apos;), (&apos;6f&apos;, &apos;6&apos;, &apos;54&apos;), (&apos;810&apos;, &apos;81&apos;, &apos;1&apos;), (&apos;85&apos;, &apos;8&apos;, &apos;5&apos;), (&apos;260&apos;, &apos;26&apos;, &apos;8&apos;), (&apos;85&apos;, &apos;8&apos;, &apos;5&apos;), (&apos;260&apos;, &apos;26&apos;, &apos;8&apos;), (&apos;6f&apos;, &apos;6&apos;, &apos;54&apos;), (&apos;810&apos;, &apos;81&apos;, &apos;1&apos;), (&apos;6f&apos;, &apos;6&apos;, &apos;54&apos;), (&apos;810&apos;, &apos;81&apos;, &apos;1&apos;), (&apos;84&apos;, &apos;8&apos;, &apos;1&apos;), (&apos;456&apos;, &apos;45&apos;, &apos;78&apos;), (&apos;506&apos;, &apos;50&apos;, &apos;12&apos;), (&apos;84&apos;, &apos;8&apos;, &apos;1&apos;), (&apos;456&apos;, &apos;45&apos;, &apos;78&apos;), (&apos;506&apos;, &apos;50&apos;, &apos;12&apos;), (&apos;648&apos;, &apos;64&apos;, &apos;5&apos;), (&apos;453&apos;, &apos;45&apos;, &apos;4&apos;), (&apos;648&apos;, &apos;64&apos;, &apos;5&apos;), (&apos;453&apos;, &apos;45&apos;, &apos;4&apos;), (&apos;84&apos;, &apos;8&apos;, &apos;1&apos;), (&apos;456&apos;, &apos;45&apos;, &apos;78&apos;), (&apos;506&apos;, &apos;50&apos;, &apos;12&apos;), (&apos;84&apos;, &apos;8&apos;, &apos;1&apos;), (&apos;456&apos;, &apos;45&apos;, &apos;78&apos;), (&apos;506&apos;, &apos;50&apos;, &apos;12&apos;), (&apos;8c&apos;, &apos;8&apos;, &apos;54&apos;), (&apos;5b&apos;, &apos;5&apos;, &apos;0&apos;), (&apos;4a&apos;, &apos;4&apos;, &apos;70&apos;), (&apos;8c&apos;, &apos;8&apos;, &apos;54&apos;), (&apos;5b&apos;, &apos;5&apos;, &apos;0&apos;), (&apos;4a&apos;, &apos;4&apos;, &apos;70&apos;), (&apos;544&apos;, &apos;54&apos;, &apos;1&apos;), (&apos;253&apos;, &apos;25&apos;, &apos;3&apos;), (&apos;544&apos;, &apos;54&apos;, &apos;1&apos;), (&apos;253&apos;, &apos;25&apos;, &apos;3&apos;), (&apos;8c&apos;, &apos;8&apos;, &apos;54&apos;), (&apos;5b&apos;, &apos;5&apos;, &apos;0&apos;), (&apos;4a&apos;, &apos;4&apos;, &apos;70&apos;), (&apos;8c&apos;, &apos;8&apos;, &apos;54&apos;), (&apos;5b&apos;, &apos;5&apos;, &apos;0&apos;), (&apos;4a&apos;, &apos;4&apos;, &apos;70&apos;), (&apos;78b&apos;, &apos;78&apos;, &apos;64&apos;), (&apos;1f&apos;, &apos;1&apos;, &apos;48&apos;), (&apos;78b&apos;, &apos;78&apos;, &apos;64&apos;), (&apos;1f&apos;, &apos;1&apos;, &apos;48&apos;), (&apos;995&apos;, &apos;99&apos;, &apos;6&apos;), (&apos;583&apos;, &apos;58&apos;, &apos;4&apos;), (&apos;995&apos;, &apos;99&apos;, &apos;6&apos;), (&apos;583&apos;, &apos;58&apos;, &apos;4&apos;), (&apos;78b&apos;, &apos;78&apos;, &apos;64&apos;), (&apos;1f&apos;, &apos;1&apos;, &apos;48&apos;), (&apos;78b&apos;, &apos;78&apos;, &apos;64&apos;), (&apos;1f&apos;, &apos;1&apos;, &apos;48&apos;), (&apos;63d&apos;, &apos;63&apos;, &apos;0&apos;), (&apos;63d&apos;, &apos;63&apos;, &apos;0&apos;), (&apos;588&apos;, &apos;58&apos;, &apos;1&apos;), (&apos;582&apos;, &apos;58&apos;, &apos;6&apos;), (&apos;588&apos;, &apos;58&apos;, &apos;1&apos;), (&apos;582&apos;, &apos;58&apos;, &apos;6&apos;), (&apos;63d&apos;, &apos;63&apos;, &apos;0&apos;), (&apos;63d&apos;, &apos;63&apos;, &apos;0&apos;), (&apos;669&apos;, &apos;66&apos;, &apos;3&apos;), (&apos;939&apos;, &apos;93&apos;, &apos;45&apos;), (&apos;669&apos;, &apos;66&apos;, &apos;3&apos;), (&apos;939&apos;, &apos;93&apos;, &apos;45&apos;), (&apos;2d&apos;, &apos;2&apos;, &apos;8&apos;), (&apos;266&apos;, &apos;26&apos;, &apos;4&apos;), (&apos;2d&apos;, &apos;2&apos;, &apos;8&apos;), (&apos;266&apos;, &apos;26&apos;, &apos;4&apos;), (&apos;01&apos;, &apos;0&apos;, &apos;42&apos;), (&apos;913&apos;, &apos;91&apos;, &apos;43&apos;), (&apos;01&apos;, &apos;0&apos;, &apos;42&apos;), (&apos;913&apos;, &apos;91&apos;, &apos;43&apos;), (&apos;2d&apos;, &apos;2&apos;, &apos;8&apos;), (&apos;266&apos;, &apos;26&apos;, &apos;4&apos;), (&apos;2d&apos;, &apos;2&apos;, &apos;8&apos;), (&apos;266&apos;, &apos;26&apos;, &apos;4&apos;), (&apos;928&apos;, &apos;92&apos;, &apos;6&apos;), (&apos;928&apos;, &apos;92&apos;, &apos;6&apos;), (&apos;46,&apos;, &apos;46&apos;, &apos;29&apos;), (&apos;10&apos;, &apos;1&apos;, &apos;5&apos;), (&apos;46_&apos;, &apos;46&apos;, &apos;29&apos;), (&apos;10&apos;, &apos;1&apos;, &apos;5&apos;), (&apos;928&apos;, &apos;92&apos;, &apos;6&apos;), (&apos;928&apos;, &apos;92&apos;, &apos;6&apos;), (&apos;299&apos;, &apos;29&apos;, &apos;0&apos;), (&apos;299&apos;, &apos;29&apos;, &apos;0&apos;), (&apos;311&apos;, &apos;31&apos;, &apos;2&apos;), (&apos;594&apos;, &apos;59&apos;, &apos;5&apos;), (&apos;299&apos;, &apos;29&apos;, &apos;0&apos;), (&apos;299&apos;, &apos;29&apos;, &apos;0&apos;), (&apos;72b&apos;, &apos;72&apos;, &apos;0&apos;), (&apos;4e&apos;, &apos;4&apos;, &apos;29&apos;), (&apos;95&apos;, &apos;9&apos;, &apos;5&apos;), (&apos;72b&apos;, &apos;72&apos;, &apos;0&apos;), (&apos;4e&apos;, &apos;4&apos;, &apos;29&apos;), (&apos;95&apos;, &apos;9&apos;, &apos;5&apos;), (&apos;09&apos;, &apos;0&apos;, &apos;7&apos;), (&apos;918&apos;, &apos;91&apos;, &apos;6&apos;), (&apos;72b&apos;, &apos;72&apos;, &apos;0&apos;), (&apos;4e&apos;, &apos;4&apos;, &apos;29&apos;), (&apos;95&apos;, &apos;9&apos;, &apos;5&apos;), (&apos;72b&apos;, &apos;72&apos;, &apos;0&apos;), (&apos;4e&apos;, &apos;4&apos;, &apos;29&apos;), (&apos;95&apos;, &apos;9&apos;, &apos;5&apos;), (&apos;7a&apos;, &apos;7&apos;, &apos;69&apos;), (&apos;7a&apos;, &apos;7&apos;, &apos;69&apos;), (&apos;29&apos;, &apos;2&apos;, &apos;4&apos;), (&apos;02&apos;, &apos;0&apos;, &apos;42&apos;), (&apos;7a&apos;, &apos;7&apos;, &apos;69&apos;), (&apos;7a&apos;, &apos;7&apos;, &apos;69&apos;), (&apos;0c&apos;, &apos;0&apos;, &apos;32&apos;), (&apos;57&apos;, &apos;5&apos;, &apos;2&apos;), (&apos;79&apos;, &apos;7&apos;, &apos;4&apos;), (&apos;0c&apos;, &apos;0&apos;, &apos;32&apos;), (&apos;57&apos;, &apos;5&apos;, &apos;2&apos;), (&apos;79&apos;, &apos;7&apos;, &apos;4&apos;), (&apos;587&apos;, &apos;58&apos;, &apos;1&apos;), (&apos;89&apos;, &apos;8&apos;, &apos;1&apos;), (&apos;0c&apos;, &apos;0&apos;, &apos;32&apos;), (&apos;57&apos;, &apos;5&apos;, &apos;2&apos;), (&apos;79&apos;, &apos;7&apos;, &apos;4&apos;), (&apos;0c&apos;, &apos;0&apos;, &apos;32&apos;), (&apos;57&apos;, &apos;5&apos;, &apos;2&apos;), (&apos;79&apos;, &apos;7&apos;, &apos;4&apos;), (&apos;1_&apos;, &apos;1&apos;, &apos;0&apos;), (&apos;5c&apos;, &apos;5&apos;, &apos;96&apos;), (&apos;8f&apos;, &apos;8&apos;, &apos;94&apos;), (&apos;1_&apos;, &apos;1&apos;, &apos;10&apos;), (&apos;1_&apos;, &apos;1&apos;, &apos;0&apos;), (&apos;5c&apos;, &apos;5&apos;, &apos;96&apos;), (&apos;8f&apos;, &apos;8&apos;, &apos;94&apos;), (&apos;1_&apos;, &apos;1&apos;, &apos;10&apos;), (&apos;1_&apos;, &apos;1&apos;, &apos;0&apos;), (&apos;5c&apos;, &apos;5&apos;, &apos;96&apos;), (&apos;8f&apos;, &apos;8&apos;, &apos;94&apos;), (&apos;1_&apos;, &apos;1&apos;, &apos;10&apos;), (&apos;1_&apos;, &apos;1&apos;, &apos;0&apos;), (&apos;5c&apos;, &apos;5&apos;, &apos;96&apos;), (&apos;8f&apos;, &apos;8&apos;, &apos;94&apos;), (&apos;1_&apos;, &apos;1&apos;, &apos;10&apos;), (&apos;1_&apos;, &apos;1&apos;, &apos;0&apos;), (&apos;5c&apos;, &apos;5&apos;, &apos;96&apos;), (&apos;8f&apos;, &apos;8&apos;, &apos;94&apos;), (&apos;1_&apos;, &apos;1&apos;, &apos;10&apos;), (&apos;1_&apos;, &apos;1&apos;, &apos;0&apos;), (&apos;5c&apos;, &apos;5&apos;, &apos;96&apos;), (&apos;8f&apos;, &apos;8&apos;, &apos;94&apos;), (&apos;1_&apos;, &apos;1&apos;, &apos;10&apos;), (&apos;1_&apos;, &apos;1&apos;, &apos;0&apos;), (&apos;5c&apos;, &apos;5&apos;, &apos;96&apos;), (&apos;8f&apos;, &apos;8&apos;, &apos;94&apos;), (&apos;1_&apos;, &apos;1&apos;, &apos;10&apos;), (&apos;1_&apos;, &apos;1&apos;, &apos;0&apos;), (&apos;5c&apos;, &apos;5&apos;, &apos;96&apos;), (&apos;8f&apos;, &apos;8&apos;, &apos;94&apos;), (&apos;1_&apos;, &apos;1&apos;, &apos;10&apos;), (&apos;1_&apos;, &apos;1&apos;, &apos;0&apos;), (&apos;5c&apos;, &apos;5&apos;, &apos;96&apos;), (&apos;8f&apos;, &apos;8&apos;, &apos;94&apos;), (&apos;1_&apos;, &apos;1&apos;, &apos;10&apos;), (&apos;1_&apos;, &apos;1&apos;, &apos;0&apos;), (&apos;5c&apos;, &apos;5&apos;, &apos;96&apos;), (&apos;8f&apos;, &apos;8&apos;, &apos;94&apos;), (&apos;1_&apos;, &apos;1&apos;, &apos;10&apos;), (&apos;1_&apos;, &apos;1&apos;, &apos;0&apos;), (&apos;5c&apos;, &apos;5&apos;, &apos;96&apos;), (&apos;8f&apos;, &apos;8&apos;, &apos;94&apos;), (&apos;11_&apos;, &apos;11&apos;, &apos;20&apos;), (&apos;1_&apos;, &apos;1&apos;, &apos;0&apos;), (&apos;5c&apos;, &apos;5&apos;, &apos;96&apos;), (&apos;8f&apos;, &apos;8&apos;, &apos;94&apos;), (&apos;11_&apos;, &apos;11&apos;, &apos;20&apos;), (&apos;892&apos;, &apos;89&apos;, &apos;1&apos;), (&apos;1_&apos;, &apos;1&apos;, &apos;0&apos;), (&apos;5c&apos;, &apos;5&apos;, &apos;96&apos;), (&apos;8f&apos;, &apos;8&apos;, &apos;94&apos;), (&apos;11_&apos;, &apos;11&apos;, &apos;20&apos;), (&apos;1_&apos;, &apos;1&apos;, &apos;0&apos;), (&apos;5c&apos;, &apos;5&apos;, &apos;96&apos;), (&apos;8f&apos;, &apos;8&apos;, &apos;94&apos;), (&apos;11_&apos;, &apos;11&apos;, &apos;20&apos;), (&apos;1_&apos;, &apos;1&apos;, &apos;0&apos;), (&apos;5c&apos;, &apos;5&apos;, &apos;96&apos;), (&apos;8f&apos;, &apos;8&apos;, &apos;94&apos;), (&apos;11_&apos;, &apos;11&apos;, &apos;20&apos;), (&apos;1_&apos;, &apos;1&apos;, &apos;0&apos;), (&apos;5c&apos;, &apos;5&apos;, &apos;96&apos;), (&apos;8f&apos;, &apos;8&apos;, &apos;94&apos;), (&apos;11_&apos;, &apos;11&apos;, &apos;20&apos;), (&apos;1_&apos;, &apos;1&apos;, &apos;0&apos;), (&apos;5c&apos;, &apos;5&apos;, &apos;96&apos;), (&apos;8f&apos;, &apos;8&apos;, &apos;94&apos;), (&apos;11_&apos;, &apos;11&apos;, &apos;20&apos;), (&apos;1_&apos;, &apos;1&apos;, &apos;0&apos;), (&apos;5c&apos;, &apos;5&apos;, &apos;96&apos;), (&apos;8f&apos;, &apos;8&apos;, &apos;94&apos;), (&apos;11_&apos;, &apos;11&apos;, &apos;20&apos;), (&apos;1_&apos;, &apos;1&apos;, &apos;0&apos;), (&apos;5c&apos;, &apos;5&apos;, &apos;96&apos;), (&apos;8f&apos;, &apos;8&apos;, &apos;94&apos;), (&apos;11_&apos;, &apos;11&apos;, &apos;20&apos;), (&apos;1_&apos;, &apos;1&apos;, &apos;0&apos;), (&apos;5c&apos;, &apos;5&apos;, &apos;96&apos;), (&apos;8f&apos;, &apos;8&apos;, &apos;94&apos;), (&apos;11_&apos;, &apos;11&apos;, &apos;20&apos;), (&apos;1_&apos;, &apos;1&apos;, &apos;0&apos;), (&apos;5c&apos;, &apos;5&apos;, &apos;96&apos;), (&apos;8f&apos;, &apos;8&apos;, &apos;94&apos;), (&apos;21_&apos;, &apos;21&apos;, &apos;30&apos;), (&apos;1_&apos;, &apos;1&apos;, &apos;0&apos;), (&apos;5c&apos;, &apos;5&apos;, &apos;96&apos;), (&apos;8f&apos;, &apos;8&apos;, &apos;94&apos;), (&apos;21_&apos;, &apos;21&apos;, &apos;30&apos;), (&apos;1_&apos;, &apos;1&apos;, &apos;0&apos;), (&apos;5c&apos;, &apos;5&apos;, &apos;96&apos;), (&apos;8f&apos;, &apos;8&apos;, &apos;94&apos;), (&apos;21_&apos;, &apos;21&apos;, &apos;30&apos;), (&apos;1_&apos;, &apos;1&apos;, &apos;0&apos;), (&apos;5c&apos;, &apos;5&apos;, &apos;96&apos;), (&apos;8f&apos;, &apos;8&apos;, &apos;94&apos;), (&apos;21_&apos;, &apos;21&apos;, &apos;30&apos;), (&apos;1_&apos;, &apos;1&apos;, &apos;0&apos;), (&apos;5c&apos;, &apos;5&apos;, &apos;96&apos;), (&apos;8f&apos;, &apos;8&apos;, &apos;94&apos;), (&apos;21_&apos;, &apos;21&apos;, &apos;30&apos;), (&apos;1_&apos;, &apos;1&apos;, &apos;0&apos;), (&apos;5c&apos;, &apos;5&apos;, &apos;96&apos;), (&apos;8f&apos;, &apos;8&apos;, &apos;94&apos;), (&apos;21_&apos;, &apos;21&apos;, &apos;30&apos;), (&apos;1_&apos;, &apos;1&apos;, &apos;0&apos;), (&apos;5c&apos;, &apos;5&apos;, &apos;96&apos;), (&apos;8f&apos;, &apos;8&apos;, &apos;94&apos;), (&apos;21_&apos;, &apos;21&apos;, &apos;30&apos;), (&apos;1_&apos;, &apos;1&apos;, &apos;0&apos;), (&apos;5c&apos;, &apos;5&apos;, &apos;96&apos;), (&apos;8f&apos;, &apos;8&apos;, &apos;94&apos;), (&apos;21_&apos;, &apos;21&apos;, &apos;30&apos;), (&apos;1_&apos;, &apos;1&apos;, &apos;0&apos;), (&apos;5c&apos;, &apos;5&apos;, &apos;96&apos;), (&apos;8f&apos;, &apos;8&apos;, &apos;94&apos;), (&apos;21_&apos;, &apos;21&apos;, &apos;30&apos;), (&apos;1_&apos;, &apos;1&apos;, &apos;0&apos;), (&apos;5c&apos;, &apos;5&apos;, &apos;96&apos;), (&apos;8f&apos;, &apos;8&apos;, &apos;94&apos;), (&apos;21_&apos;, &apos;21&apos;, &apos;30&apos;), (&apos;0,&apos;, &apos;0&apos;, &apos;0&apos;), (&apos;847&apos;, &apos;84&apos;, &apos;2&apos;), (&apos;00&apos;, &apos;0&apos;, &apos;72&apos;), (&apos;647&apos;, &apos;64&apos;, &apos;2&apos;), (&apos;247&apos;, &apos;24&apos;, &apos;2&apos;), (&apos;120&apos;, &apos;12&apos;, &apos;0&apos;), (&apos;280&apos;, &apos;28&apos;, &apos;0&apos;), (&apos;920&apos;, &apos;92&apos;, &apos;0&apos;), (&apos;520&apos;, &apos;52&apos;, &apos;0&apos;), (&apos;22&apos;, &apos;2&apos;, &apos;7&apos;), (&apos;17&apos;, &apos;1&apos;, &apos;2&apos;), (&apos;22&apos;, &apos;2&apos;, &apos;7&apos;), (&apos;17&apos;, &apos;1&apos;, &apos;2&apos;), (&apos;22&apos;, &apos;2&apos;, &apos;7&apos;), (&apos;17&apos;, &apos;1&apos;, &apos;2&apos;), (&apos;519&apos;, &apos;51&apos;, &apos;0&apos;), (&apos;75&apos;, &apos;7&apos;, &apos;4&apos;), (&apos;853&apos;, &apos;85&apos;, &apos;43&apos;), (&apos;8f&apos;, &apos;8&apos;, &apos;2&apos;), (&apos;214&apos;, &apos;21&apos;, &apos;2&apos;), (&apos;19&apos;, &apos;1&apos;, &apos;0&apos;), (&apos;799&apos;, &apos;79&apos;, &apos;84&apos;), (&apos;4e&apos;, &apos;4&apos;, &apos;7&apos;), (&apos;206&apos;, &apos;20&apos;, &apos;86&apos;), (&apos;52&apos;, &apos;5&apos;, &apos;9&apos;), (&apos;1E&apos;, &apos;1&apos;, &apos;4&apos;), (&apos;487&apos;, &apos;48&apos;, &apos;2&apos;), (&apos;896&apos;, &apos;89&apos;, &apos;19&apos;), (&apos;43&apos;, &apos;4&apos;, &apos;6&apos;), (&apos;51&apos;, &apos;5&apos;, &apos;3&apos;), (&apos;912&apos;, &apos;91&apos;, &apos;45&apos;), (&apos;02&apos;, &apos;0&apos;, &apos;1&apos;), (&apos;413&apos;, &apos;41&apos;, &apos;0&apos;), (&apos;47&apos;, &apos;4&apos;, &apos;8&apos;), (&apos;50&apos;, &apos;5&apos;, &apos;8&apos;), (&apos;5b&apos;, &apos;5&apos;, &apos;50&apos;), (&apos;9a&apos;, &apos;9&apos;, &apos;47&apos;), (&apos;64&apos;, &apos;6&apos;, &apos;2&apos;), (&apos;0c&apos;, &apos;0&apos;, &apos;0&apos;), (&apos;5c&apos;, &apos;5&apos;, &apos;0&apos;), (&apos;2d&apos;, &apos;2&apos;, &apos;30&apos;), (&apos;1a&apos;, &apos;1&apos;, &apos;1&apos;), (&apos;50&apos;, &apos;5&apos;, &apos;2&apos;), (&apos;61&apos;, &apos;6&apos;, &apos;0&apos;), (&apos;60&apos;, &apos;6&apos;, &apos;5&apos;), (&apos;9e&apos;, &apos;9&apos;, &apos;0&apos;), (&apos;9a&apos;, &apos;9&apos;, &apos;3&apos;), (&apos;86%&apos;, &apos;86&apos;, &apos;0&apos;), (&apos;1E&apos;, &apos;1&apos;, &apos;4&apos;), (&apos;487&apos;, &apos;48&apos;, &apos;2&apos;), (&apos;1m&apos;, &apos;1&apos;, &apos;6&apos;), (&apos;1m&apos;, &apos;1&apos;, &apos;6&apos;), (&apos;638&apos;, &apos;63&apos;, &apos;92&apos;), (&apos;50_&apos;, &apos;50&apos;, &apos;4&apos;), (&apos;1m&apos;, &apos;1&apos;, &apos;6&apos;), (&apos;51&apos;, &apos;5&apos;, &apos;3&apos;), (&apos;912&apos;, &apos;91&apos;, &apos;40&apos;), (&apos;21&apos;, &apos;2&apos;, &apos;8&apos;), (&apos;413&apos;, &apos;41&apos;, &apos;0&apos;), (&apos;81&apos;, &apos;8&apos;, &apos;3&apos;), (&apos;3a&apos;, &apos;3&apos;, &apos;5&apos;), (&apos;9c&apos;, &apos;9&apos;, &apos;11&apos;), (&apos;9a&apos;, &apos;9&apos;, &apos;47&apos;), (&apos;449&apos;, &apos;44&apos;, &apos;92&apos;), (&apos;1a&apos;, &apos;1&apos;, &apos;1&apos;), (&apos;1a&apos;, &apos;1&apos;, &apos;0&apos;), (&apos;07&apos;, &apos;0&apos;, &apos;43&apos;), (&apos;1f&apos;, &apos;1&apos;, &apos;68&apos;), (&apos;9e&apos;, &apos;9&apos;, &apos;0&apos;), (&apos;9a&apos;, &apos;9&apos;, &apos;3&apos;), (&apos;1E&apos;, &apos;1&apos;, &apos;4&apos;), (&apos;487&apos;, &apos;48&apos;, &apos;2&apos;), (&apos;5M&apos;, &apos;5&apos;, &apos;6&apos;), (&apos;5M&apos;, &apos;5&apos;, &apos;6&apos;), (&apos;458&apos;, &apos;45&apos;, &apos;6&apos;), (&apos;710&apos;, &apos;71&apos;, &apos;3&apos;), (&apos;70E&apos;, &apos;70&apos;, &apos;1&apos;), (&apos;00&apos;, &apos;0&apos;, &apos;40&apos;), (&apos;5M&apos;, &apos;5&apos;, &apos;6&apos;), (&apos;5b&apos;, &apos;5&apos;, &apos;39&apos;), (&apos;63a&apos;, &apos;63&apos;, &apos;1&apos;), (&apos;61&apos;, &apos;6&apos;, &apos;9&apos;), (&apos;159&apos;, &apos;15&apos;, &apos;42&apos;), (&apos;07&apos;, &apos;0&apos;, &apos;78&apos;), (&apos;717&apos;, &apos;71&apos;, &apos;55&apos;), (&apos;47&apos;, &apos;4&apos;, &apos;5&apos;), (&apos;5M&apos;, &apos;5&apos;, &apos;6&apos;), (&apos;51&apos;, &apos;5&apos;, &apos;3&apos;), (&apos;912&apos;, &apos;91&apos;, &apos;45&apos;), (&apos;02&apos;, &apos;0&apos;, &apos;1&apos;), (&apos;24&apos;, &apos;2&apos;, &apos;8&apos;), (&apos;564&apos;, &apos;56&apos;, &apos;71&apos;), (&apos;87c&apos;, &apos;87&apos;, &apos;74&apos;), (&apos;3b&apos;, &apos;3&apos;, &apos;22&apos;), (&apos;242&apos;, &apos;24&apos;, &apos;0&apos;), (&apos;8f&apos;, &apos;8&apos;, &apos;25&apos;), (&apos;88c&apos;, &apos;88&apos;, &apos;42&apos;), (&apos;137&apos;, &apos;13&apos;, &apos;91&apos;), (&apos;9f&apos;, &apos;9&apos;, &apos;43&apos;), (&apos;970&apos;, &apos;97&apos;, &apos;29&apos;), (&apos;1a&apos;, &apos;1&apos;, &apos;0&apos;), (&apos;97&apos;, &apos;9&apos;, &apos;0&apos;), (&apos;5e&apos;, &apos;5&apos;, &apos;80&apos;), (&apos;0c&apos;, &apos;0&apos;, &apos;40&apos;), (&apos;12c&apos;, &apos;12&apos;, &apos;10&apos;), (&apos;24b&apos;, &apos;24&apos;, &apos;9&apos;), (&apos;1c&apos;, &apos;1&apos;, &apos;1&apos;), (&apos;823&apos;, &apos;82&apos;, &apos;28&apos;), (&apos;4c&apos;, &apos;4&apos;, &apos;67&apos;), (&apos;924&apos;, &apos;92&apos;, &apos;1&apos;), (&apos;6b&apos;, &apos;6&apos;, &apos;55&apos;), (&apos;9e&apos;, &apos;9&apos;, &apos;0&apos;), (&apos;9a&apos;, &apos;9&apos;, &apos;3&apos;), (&apos;1E&apos;, &apos;1&apos;, &apos;4&apos;), (&apos;487&apos;, &apos;48&apos;, &apos;2&apos;), (&apos;81&apos;, &apos;8&apos;, &apos;9&apos;), (&apos;192&apos;, &apos;19&apos;, &apos;21&apos;), (&apos;32C&apos;, &apos;32&apos;, &apos;4&apos;), (&apos;00&apos;, &apos;0&apos;, &apos;0&apos;), (&apos;789&apos;, &apos;78&apos;, &apos;0&apos;), (&apos;78&apos;, &apos;7&apos;, &apos;6&apos;), (&apos;515&apos;, &apos;51&apos;, &apos;0&apos;), (&apos;636&apos;, &apos;63&apos;, &apos;66&apos;), (&apos;2f&apos;, &apos;2&apos;, &apos;4&apos;), (&apos;385&apos;, &apos;38&apos;, &apos;2&apos;), (&apos;3f&apos;, &apos;3&apos;, &apos;85&apos;), (&apos;971&apos;, &apos;97&apos;, &apos;3&apos;), (&apos;2f&apos;, &apos;2&apos;, &apos;4&apos;), (&apos;385&apos;, &apos;38&apos;, &apos;2&apos;), (&apos;3f&apos;, &apos;3&apos;, &apos;85&apos;), (&apos;971&apos;, &apos;97&apos;, &apos;3&apos;), (&apos;51&apos;, &apos;5&apos;, &apos;3&apos;), (&apos;912&apos;, &apos;91&apos;, &apos;45&apos;), (&apos;02&apos;, &apos;0&apos;, &apos;1&apos;), (&apos;1f&apos;, &apos;1&apos;, &apos;1&apos;), (&apos;4e&apos;, &apos;4&apos;, &apos;5&apos;), (&apos;36&apos;, &apos;3&apos;, &apos;5&apos;), (&apos;0f&apos;, &apos;0&apos;, &apos;0&apos;), (&apos;771&apos;, &apos;77&apos;, &apos;0&apos;), (&apos;5d&apos;, &apos;5&apos;, &apos;0&apos;), (&apos;0d&apos;, &apos;0&apos;, &apos;30&apos;), (&apos;1a&apos;, &apos;1&apos;, &apos;1&apos;), (&apos;1a&apos;, &apos;1&apos;, &apos;0&apos;), (&apos;07&apos;, &apos;0&apos;, &apos;43&apos;), (&apos;1f&apos;, &apos;1&apos;, &apos;68&apos;), (&apos;9e&apos;, &apos;9&apos;, &apos;0&apos;), (&apos;9a&apos;, &apos;9&apos;, &apos;3&apos;), (&apos;86%&apos;, &apos;86&apos;, &apos;0&apos;), (&apos;81%&apos;, &apos;81&apos;, &apos;0&apos;), (&apos;86%&apos;, &apos;86&apos;, &apos;0&apos;), (&apos;86%&apos;, &apos;86&apos;, &apos;0&apos;), (&apos;1E&apos;, &apos;1&apos;, &apos;4&apos;), (&apos;487&apos;, &apos;48&apos;, &apos;2&apos;), (&apos;1.&apos;, &apos;1&apos;, &apos;1&apos;), (&apos;1.&apos;, &apos;1&apos;, &apos;2&apos;), (&apos;1.&apos;, &apos;1&apos;, &apos;1&apos;), (&apos;7.&apos;, &apos;7&apos;, &apos;1&apos;), (&apos;7b&apos;, &apos;7&apos;, &apos;67&apos;), (&apos;825&apos;, &apos;82&apos;, &apos;89&apos;), (&apos;5f&apos;, &apos;5&apos;, &apos;66&apos;), (&apos;173&apos;, &apos;17&apos;, &apos;78&apos;), (&apos;547&apos;, &apos;54&apos;, &apos;1&apos;), (&apos;51&apos;, &apos;5&apos;, &apos;3&apos;), (&apos;912&apos;, &apos;91&apos;, &apos;45&apos;), (&apos;02&apos;, &apos;0&apos;, &apos;1&apos;), (&apos;23&apos;, &apos;2&apos;, &apos;8&apos;), (&apos;30b&apos;, &apos;30&apos;, &apos;12&apos;), (&apos;59&apos;, &apos;5&apos;, &apos;8&apos;), (&apos;455&apos;, &apos;45&apos;, &apos;2&apos;), (&apos;2b&apos;, &apos;2&apos;, &apos;82&apos;), (&apos;7a&apos;, &apos;7&apos;, &apos;4&apos;), (&apos;2a&apos;, &apos;2&apos;, &apos;44&apos;), (&apos;41&apos;, &apos;4&apos;, &apos;8&apos;), (&apos;934&apos;, &apos;93&apos;, &apos;4&apos;), (&apos;0f&apos;, &apos;0&apos;, &apos;5&apos;), (&apos;478&apos;, &apos;47&apos;, &apos;38&apos;), (&apos;4b&apos;, &apos;4&apos;, &apos;92&apos;), (&apos;873&apos;, &apos;87&apos;, &apos;20&apos;), (&apos;31a&apos;, &apos;31&apos;, &apos;3&apos;), (&apos;4c&apos;, &apos;4&apos;, &apos;0&apos;), (&apos;507&apos;, &apos;50&apos;, &apos;22&apos;), (&apos;6d&apos;, &apos;6&apos;, &apos;87&apos;), (&apos;64&apos;, &apos;6&apos;, &apos;9&apos;), (&apos;9e&apos;, &apos;9&apos;, &apos;0&apos;), (&apos;9a&apos;, &apos;9&apos;, &apos;3&apos;), (&apos;1E&apos;, &apos;1&apos;, &apos;4&apos;), (&apos;487&apos;, &apos;48&apos;, &apos;2&apos;), (&apos;578&apos;, &apos;57&apos;, &apos;14&apos;), (&apos;18&apos;, &apos;1&apos;, &apos;5&apos;), (&apos;51&apos;, &apos;5&apos;, &apos;3&apos;), (&apos;912&apos;, &apos;91&apos;, &apos;40&apos;), (&apos;219&apos;, &apos;21&apos;, &apos;29&apos;), (&apos;4e&apos;, &apos;4&apos;, &apos;41&apos;), (&apos;07&apos;, &apos;0&apos;, &apos;19&apos;), (&apos;7c&apos;, &apos;7&apos;, &apos;4&apos;), (&apos;27c&apos;, &apos;27&apos;, &apos;10&apos;), (&apos;64&apos;, &apos;6&apos;, &apos;1&apos;), (&apos;964&apos;, &apos;96&apos;, &apos;4&apos;), (&apos;14&apos;, &apos;1&apos;, &apos;9&apos;), (&apos;478&apos;, &apos;47&apos;, &apos;38&apos;), (&apos;64&apos;, &apos;6&apos;, &apos;8&apos;), (&apos;7d&apos;, &apos;7&apos;, &apos;41&apos;), (&apos;82&apos;, &apos;8&apos;, &apos;5&apos;), (&apos;00&apos;, &apos;0&apos;, &apos;1&apos;), (&apos;13&apos;, &apos;1&apos;, &apos;0&apos;), (&apos;5a&apos;, &apos;5&apos;, &apos;84&apos;), (&apos;09&apos;, &apos;0&apos;, &apos;23&apos;), (&apos;47&apos;, &apos;4&apos;, &apos;9&apos;), (&apos;9e&apos;, &apos;9&apos;, &apos;0&apos;), (&apos;9a&apos;, &apos;9&apos;, &apos;3&apos;), (&apos;1E&apos;, &apos;1&apos;, &apos;4&apos;), (&apos;487&apos;, &apos;48&apos;, &apos;2&apos;), (&apos;916&apos;, &apos;91&apos;, &apos;69&apos;), (&apos;29_&apos;, &apos;29&apos;, &apos;9&apos;), (&apos;187&apos;, &apos;18&apos;, &apos;66&apos;), (&apos;11&apos;, &apos;1&apos;, &apos;4&apos;), (&apos;449&apos;, &apos;44&apos;, &apos;44&apos;), (&apos;01&apos;, &apos;0&apos;, &apos;8&apos;), (&apos;99f&apos;, &apos;99&apos;, &apos;6&apos;), (&apos;916&apos;, &apos;91&apos;, &apos;3&apos;), (&apos;449&apos;, &apos;44&apos;, &apos;44&apos;), (&apos;01&apos;, &apos;0&apos;, &apos;8&apos;), (&apos;99f&apos;, &apos;99&apos;, &apos;6&apos;), (&apos;916&apos;, &apos;91&apos;, &apos;3&apos;), (&apos;850&apos;, &apos;85&apos;, &apos;7&apos;), (&apos;392&apos;, &apos;39&apos;, &apos;23&apos;), (&apos;734&apos;, &apos;73&apos;, &apos;7&apos;), (&apos;21&apos;, &apos;2&apos;, &apos;8&apos;), (&apos;435&apos;, &apos;43&apos;, &apos;0&apos;), (&apos;72a&apos;, &apos;72&apos;, &apos;6&apos;), (&apos;1f&apos;, &apos;1&apos;, &apos;5&apos;), (&apos;114&apos;, &apos;11&apos;, &apos;86&apos;), (&apos;90&apos;, &apos;9&apos;, &apos;4&apos;), (&apos;2f&apos;, &apos;2&apos;, &apos;4&apos;), (&apos;421&apos;, &apos;42&apos;, &apos;6&apos;), (&apos;24b&apos;, &apos;24&apos;, &apos;9&apos;), (&apos;1c&apos;, &apos;1&apos;, &apos;1&apos;), (&apos;124&apos;, &apos;12&apos;, &apos;28&apos;), (&apos;600&apos;, &apos;60&apos;, &apos;4&apos;), (&apos;417&apos;, &apos;41&apos;, &apos;66&apos;), (&apos;9e&apos;, &apos;9&apos;, &apos;0&apos;), (&apos;9a&apos;, &apos;9&apos;, &apos;3&apos;), (&apos;86%&apos;, &apos;86&apos;, &apos;0&apos;), (&apos;86%&apos;, &apos;86&apos;, &apos;0&apos;), (&apos;86%&apos;, &apos;86&apos;, &apos;0&apos;), (&apos;922&apos;, &apos;92&apos;, &apos;83&apos;), (&apos;60&apos;, &apos;6&apos;, &apos;9&apos;), (&apos;00&apos;, &apos;0&apos;, &apos;5&apos;), (&apos;9e&apos;, &apos;9&apos;, &apos;0&apos;), (&apos;9a&apos;, &apos;9&apos;, &apos;3&apos;), (&apos;9e&apos;, &apos;9&apos;, &apos;0&apos;), (&apos;9a&apos;, &apos;9&apos;, &apos;3&apos;), (&apos;01&apos;, &apos;0&apos;, &apos;3&apos;), (&apos;9e&apos;, &apos;9&apos;, &apos;0&apos;), (&apos;9a&apos;, &apos;9&apos;, &apos;3&apos;), (&apos;9e&apos;, &apos;9&apos;, &apos;0&apos;), (&apos;9a&apos;, &apos;9&apos;, &apos;3&apos;), (&apos;01&apos;, &apos;0&apos;, &apos;3&apos;), (&apos;9e&apos;, &apos;9&apos;, &apos;0&apos;), (&apos;9a&apos;, &apos;9&apos;, &apos;3&apos;), (&apos;9e&apos;, &apos;9&apos;, &apos;0&apos;), (&apos;9a&apos;, &apos;9&apos;, &apos;3&apos;), (&apos;00&apos;, &apos;0&apos;, &apos;1&apos;), (&apos;9e&apos;, &apos;9&apos;, &apos;0&apos;), (&apos;9a&apos;, &apos;9&apos;, &apos;3&apos;), (&apos;9e&apos;, &apos;9&apos;, &apos;0&apos;), (&apos;9a&apos;, &apos;9&apos;, &apos;3&apos;), (&apos;01&apos;, &apos;0&apos;, &apos;3&apos;), (&apos;9e&apos;, &apos;9&apos;, &apos;0&apos;), (&apos;9a&apos;, &apos;9&apos;, &apos;3&apos;), (&apos;9e&apos;, &apos;9&apos;, &apos;0&apos;), (&apos;9a&apos;, &apos;9&apos;, &apos;3&apos;), (&apos;00&apos;, &apos;0&apos;, &apos;1&apos;), (&apos;9e&apos;, &apos;9&apos;, &apos;0&apos;), (&apos;9a&apos;, &apos;9&apos;, &apos;3&apos;), (&apos;9e&apos;, &apos;9&apos;, &apos;0&apos;), (&apos;9a&apos;, &apos;9&apos;, &apos;3&apos;), (&apos;00&apos;, &apos;0&apos;, &apos;1&apos;), (&apos;9e&apos;, &apos;9&apos;, &apos;0&apos;), (&apos;9a&apos;, &apos;9&apos;, &apos;3&apos;), (&apos;9e&apos;, &apos;9&apos;, &apos;0&apos;), (&apos;9a&apos;, &apos;9&apos;, &apos;3&apos;), (&apos;01&apos;, &apos;0&apos;, &apos;3&apos;), (&apos;9e&apos;, &apos;9&apos;, &apos;0&apos;), (&apos;9a&apos;, &apos;9&apos;, &apos;3&apos;), (&apos;9e&apos;, &apos;9&apos;, &apos;0&apos;), (&apos;9a&apos;, &apos;9&apos;, &apos;3&apos;), (&apos;01&apos;, &apos;0&apos;, &apos;3&apos;), (&apos;9e&apos;, &apos;9&apos;, &apos;0&apos;), (&apos;9a&apos;, &apos;9&apos;, &apos;3&apos;), (&apos;9e&apos;, &apos;9&apos;, &apos;0&apos;), (&apos;9a&apos;, &apos;9&apos;, &apos;3&apos;), (&apos;9e&apos;, &apos;9&apos;, &apos;0&apos;), (&apos;9a&apos;, &apos;9&apos;, &apos;3&apos;), (&apos;9e&apos;, &apos;9&apos;, &apos;0&apos;), (&apos;9a&apos;, &apos;9&apos;, &apos;3&apos;), (&apos;9e&apos;, &apos;9&apos;, &apos;0&apos;), (&apos;9a&apos;, &apos;9&apos;, &apos;3&apos;), (&apos;9e&apos;, &apos;9&apos;, &apos;0&apos;), (&apos;9a&apos;, &apos;9&apos;, &apos;3&apos;), (&apos;9e&apos;, &apos;9&apos;, &apos;0&apos;), (&apos;9a&apos;, &apos;9&apos;, &apos;3&apos;), (&apos;9e&apos;, &apos;9&apos;, &apos;0&apos;), (&apos;9a&apos;, &apos;9&apos;, &apos;3&apos;), (&apos;9e&apos;, &apos;9&apos;, &apos;0&apos;), (&apos;9a&apos;, &apos;9&apos;, &apos;3&apos;), (&apos;9e&apos;, &apos;9&apos;, &apos;0&apos;), (&apos;9a&apos;, &apos;9&apos;, &apos;3&apos;), (&apos;9e&apos;, &apos;9&apos;, &apos;0&apos;), (&apos;9a&apos;, &apos;9&apos;, &apos;3&apos;), (&apos;9e&apos;, &apos;9&apos;, &apos;0&apos;), (&apos;9a&apos;, &apos;9&apos;, &apos;3&apos;), (&apos;2a&apos;, &apos;2&apos;, &apos;2&apos;), (&apos;8e&apos;, &apos;8&apos;, &apos;7&apos;), (&apos;0d&apos;, &apos;0&apos;, &apos;4&apos;), (&apos;2e&apos;, &apos;2&apos;, &apos;6&apos;), (&apos;2e&apos;, &apos;2&apos;, &apos;6&apos;), (&apos;2f&apos;, &apos;2&apos;, &apos;8&apos;), (&apos;487&apos;, &apos;48&apos;, &apos;2&apos;), (&apos;07&apos;, &apos;0&apos;, &apos;34&apos;), (&apos;4e&apos;, &apos;4&apos;, &apos;98&apos;), (&apos;69&apos;, &apos;6&apos;, &apos;8&apos;), (&apos;31&apos;, &apos;3&apos;, &apos;5&apos;), (&apos;00&apos;, &apos;0&apos;, &apos;0&apos;), (&apos;00&apos;, &apos;0&apos;, &apos;0&apos;), (&apos;00&apos;, &apos;0&apos;, &apos;0&apos;), (&apos;00&apos;, &apos;0&apos;, &apos;0&apos;), (&apos;00&apos;, &apos;0&apos;, &apos;0&apos;), (&apos;00&apos;, &apos;0&apos;, &apos;0&apos;), (&apos;58&apos;, &apos;5&apos;, &apos;0&apos;)]</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;1-下面为抓取百度热点的过程&quot;&gt;&lt;a href=&quot;#1-下面为抓取百度热点的过程&quot; class=&quot;headerlink&quot; title=&quot;1.下面为抓取百度热点的过程&quot;&gt;&lt;/a&gt;&lt;strong&gt;1.下面为抓取百度热点的过程&lt;/strong&gt;&lt;/h4&gt;&lt;figure 
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>作业3</title>
    <link href="http://yoursite.com/2020/04/24/%E4%BD%9C%E4%B8%9A3/"/>
    <id>http://yoursite.com/2020/04/24/%E4%BD%9C%E4%B8%9A3/</id>
    <published>2020-04-24T06:12:39.331Z</published>
    <updated>2020-04-24T06:15:08.398Z</updated>
    
    <content type="html"><![CDATA[<p>代码如下</p><h3 id="提取省份超链接"><a href="#提取省份超链接" class="headerlink" title="提取省份超链接"></a>提取省份超链接</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">html = <span class="string">"""&lt;HTML&gt;</span></span><br><span class="line"><span class="string">&lt;HEAD&gt;</span></span><br><span class="line"><span class="string">&lt;META content="text/html; charset=gb2312" http-equiv=Content-Type&gt;</span></span><br><span class="line"><span class="string">&lt;TITLE&gt;关于更新全国统计用区划代码和城乡划分代码的公告 &lt;/TITLE&gt;</span></span><br><span class="line"><span class="string">&lt;STYLE type=text/css&gt;</span></span><br><span class="line"><span class="string">BODY &#123;MARGIN: 0px&#125;BODY &#123;FONT-SIZE: 12px&#125;</span></span><br><span class="line"><span class="string">TD &#123;FONT-SIZE: 12px&#125;</span></span><br><span class="line"><span class="string">TH &#123;FONT-SIZE: 12px&#125;</span></span><br><span class="line"><span class="string">.redBig &#123;COLOR: #d00018; FONT-SIZE: 18px; FONT-WEIGHT: bold&#125;</span></span><br><span class="line"><span class="string">.STYLE3 a&#123;COLOR: #fff; text-decoration:none;&#125;</span></span><br><span class="line"><span class="string">.STYLE5 &#123;COLOR: #236fbe; FONT-WEIGHT: bold&#125;</span></span><br><span class="line"><span class="string">.content &#123;LINE-HEIGHT: 1.5; FONT-SIZE: 10.4pt&#125;</span></span><br><span class="line"><span class="string">.tdPading &#123;PADDING-LEFT: 30px&#125;.blue &#123;COLOR: #0000ff&#125;</span></span><br><span class="line"><span class="string">.STYLE6 &#123;COLOR: #ffffff&#125;</span></span><br><span class="line"><span class="string">.a2 &#123;LINE-HEIGHT: 1.5; COLOR: #2a6fbd; FONT-SIZE: 12px&#125;</span></span><br><span class="line"><span class="string">a2:link &#123;LINE-HEIGHT: 1.5; COLOR: #2a6fbd; FONT-SIZE: 12px&#125;</span></span><br><span class="line"><span class="string">a2:hover &#123;LINE-HEIGHT: 1.5; COLOR: #2a6fbd; FONT-SIZE: 12px; TEXT-DECORATION: underline&#125;</span></span><br><span class="line"><span class="string">a2:visited &#123;LINE-HEIGHT: 1.5; COLOR: #2a6fbd; FONT-SIZE: 12px&#125;</span></span><br><span class="line"><span class="string">&lt;/STYLE&gt;</span></span><br><span class="line"><span class="string">&lt;SCRIPT language=javascript&gt;</span></span><br><span class="line"><span class="string">function doZoom(size)&#123;document.getElementById('zoom').style.fontSize=size+'px';&#125;</span></span><br><span class="line"><span class="string">&lt;/SCRIPT&gt;</span></span><br><span class="line"><span class="string">&lt;META name=GENERATOR content="MSHTML 8.00.7600.16700"&gt;</span></span><br><span class="line"><span class="string">&lt;/HEAD&gt;</span></span><br><span class="line"><span class="string">&lt;BODY&gt;</span></span><br><span class="line"><span class="string">&lt;TABLE border=0 cellSpacing=0 cellPadding=0 width=778 align=center&gt;</span></span><br><span class="line"><span class="string">&lt;TBODY&gt;</span></span><br><span class="line"><span class="string">&lt;TR&gt;&lt;TD colSpan=2&gt;&lt;IMG src="http://www.stats.gov.cn/images/banner.jpg" width=778 height=135&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;MAP id=Map name=Map&gt;&lt;AREA href="http://www.stats.gov.cn/english/" shape=rect coords=277,4,328,18&gt;&lt;AREA href="http://www.stats.gov.cn:82/" shape=rect coords=181,4,236,18&gt;&lt;AREA href="http://www.stats.gov.cn/" shape=rect coords=85,4,140,17&gt;&lt;/MAP&gt;&lt;TABLE border=0 cellSpacing=0 cellPadding=0 width=778 align=center&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD vAlign=top&gt;&lt;TABLE style="MARGIN-TOP: 15px; MARGIN-BOTTOM: 18px" border=0 cellSpacing=0 cellPadding=0 width="100%" align=center&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD style=" BACKGROUND-REPEAT: repeat-x; BACKGROUND-POSITION: 50% top" background=images/topLine.gif align=right&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD style=" BACKGROUND-REPEAT: repeat-y; BACKGROUND-POSITION: right 50%" vAlign=top background=images/rightBorder.gif&gt;&lt;TABLE border=0 cellSpacing=0 cellPadding=0 width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="1%" height="200" vAlign=top&gt;</span></span><br><span class="line"><span class="string">&lt;table class='provincetable' width=775 &gt;&lt;tr &gt;&lt;td colspan=8  height=1 style='FONT-SIZE: 5px' &gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;</span></span><br><span class="line"><span class="string">&lt;tr class='provincehead'&gt;&lt;td  colspan=8 align='center' style='FONT-SIZE: 16px' height=39 vAlign='center' background='images/tiao.jpg'&gt;</span></span><br><span class="line"><span class="string">&lt;strong&gt;关于更新全国统计用区划代码和城乡划分代码的公告&lt;/strong&gt;&lt;/td&gt;</span></span><br><span class="line"><span class="string">&lt;/tr&gt;&lt;tr &gt;</span></span><br><span class="line"><span class="string">  &lt;td colspan=8  height=50 style='FONT-SIZE: 12px' &gt; 　　为更好满足2020年常规统计调查和专项调查的需要，国家统计局组织开展了2019年度统计用区划代码和城乡划分代码更新维护工作，调查时点为2019年10月31日。目前，已完成更新维护工作,现予公布。</span></span><br><span class="line"><span class="string">  &lt;br&gt; 　　2019年统计用区划代码和城乡划分代码依据国务院批复同意的《关于统计上划分城乡的规定》（国函〔2008〕60号）及国家统计局印发的《统计用区划代码和城乡划分代码编制规则》（国统字〔2009〕91号）编制。</span></span><br><span class="line"><span class="string">  &lt;br&gt; 　　此次发布内容为2019年全国统计用区划代码（12位）和城乡分类代码（3位），地域范围为国家统计局开展统计调查的全国31个省、自治区、直辖市，未包括我国台湾省、香港特别行政区、澳门特别行政区。</span></span><br><span class="line"><span class="string">  &lt;br&gt; 　　《关于统计上划分城乡的规定》指出：“本规定作为统计上划分城乡的依据，不改变现有的行政区划、隶属关系、管理权限和机构编制，以及土地规划、城乡规划等有关规定”。统计用区划代码和城乡划分代码，在统计工作中应当使用，需要在其他工作中使用时，请务必结合有关实际情况。</span></span><br><span class="line"><span class="string">  &lt;/td&gt;</span></span><br><span class="line"><span class="string">&lt;/tr&gt;</span></span><br><span class="line"><span class="string">&lt;tr class='provincetr'&gt;&lt;td&gt;&lt;a href='11.html'&gt;北京市&lt;br/&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href='12.html'&gt;天津市&lt;br/&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href='13.html'&gt;河北省&lt;br/&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href='14.html'&gt;山西省&lt;br/&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href='15.html'&gt;内蒙古自治区&lt;br/&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href='21.html'&gt;辽宁省&lt;br/&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href='22.html'&gt;吉林省&lt;br/&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href='23.html'&gt;黑龙江省&lt;br/&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;</span></span><br><span class="line"><span class="string">&lt;tr class='provincetr'&gt;&lt;td&gt;&lt;a href='31.html'&gt;上海市&lt;br/&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href='32.html'&gt;江苏省&lt;br/&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href='33.html'&gt;浙江省&lt;br/&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href='34.html'&gt;安徽省&lt;br/&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href='35.html'&gt;福建省&lt;br/&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href='36.html'&gt;江西省&lt;br/&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href='37.html'&gt;山东省&lt;br/&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href='41.html'&gt;河南省&lt;br/&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;</span></span><br><span class="line"><span class="string">&lt;tr class='provincetr'&gt;&lt;td&gt;&lt;a href='42.html'&gt;湖北省&lt;br/&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href='43.html'&gt;湖南省&lt;br/&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href='44.html'&gt;广东省&lt;br/&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href='45.html'&gt;广西壮族自治区&lt;br/&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href='46.html'&gt;海南省&lt;br/&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href='50.html'&gt;重庆市&lt;br/&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href='51.html'&gt;四川省&lt;br/&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href='52.html'&gt;贵州省&lt;br/&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;</span></span><br><span class="line"><span class="string">&lt;tr class='provincetr'&gt;&lt;td&gt;&lt;a href='53.html'&gt;云南省&lt;br/&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href='54.html'&gt;西藏自治区&lt;br/&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href='61.html'&gt;陕西省&lt;br/&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href='62.html'&gt;甘肃省&lt;br/&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href='63.html'&gt;青海省&lt;br/&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href='64.html'&gt;宁夏回族自治区&lt;br/&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href='65.html'&gt;新疆维吾尔自治区&lt;br/&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;/table&gt;</span></span><br><span class="line"><span class="string">&lt;/TD&gt;</span></span><br><span class="line"><span class="string">&lt;/TR&gt;</span></span><br><span class="line"><span class="string">&lt;/TBODY&gt;</span></span><br><span class="line"><span class="string">&lt;/TABLE&gt;</span></span><br><span class="line"><span class="string">&lt;/TD&gt;</span></span><br><span class="line"><span class="string">&lt;/TR&gt;</span></span><br><span class="line"><span class="string">&lt;TR&gt;</span></span><br><span class="line"><span class="string">&lt;TD style="BACKGROUND-REPEAT: repeat-x; BACKGROUND-POSITION: 50% top"          background=images/borderBottom.gif&gt;</span></span><br><span class="line"><span class="string">&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;</span></span><br><span class="line"><span class="string">&lt;/TABLE&gt;&lt;/TD&gt;&lt;/TR&gt;  &lt;TR&gt;    &lt;TD bgColor=#e2eefc height=2&gt;&lt;/TD&gt;&lt;/TR&gt;  &lt;TR&gt;</span></span><br><span class="line"><span class="string">&lt;TD class=STYLE3 height=60&gt;</span></span><br><span class="line"><span class="string">&lt;DIV align=center style="background-color:#1E67A7; height:75px; color:#fff;"&gt;&lt;br/&gt;</span></span><br><span class="line"><span class="string">版权所有：国家统计局　　&lt;A class=STYLE3       href="http://www.miibeian.gov.cn/"       target=_blank&gt;京ICP备05034670号&lt;/A&gt;&lt;BR&gt;&lt;BR&gt;地址：北京市西城区月坛南街57号（100826）&lt;BR&gt;&lt;/DIV&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;/BODY&gt;&lt;/HTML&gt;</span></span><br><span class="line"><span class="string">"""</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pattern = <span class="string">"'\d&#123;2&#125;\.html'&gt;(.*?)&lt;br/&gt;"</span></span><br><span class="line">result = re.findall(pattern,html)</span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure><pre><code>[&apos;北京市&apos;, &apos;天津市&apos;, &apos;河北省&apos;, &apos;山西省&apos;, &apos;内蒙古自治区&apos;, &apos;辽宁省&apos;, &apos;吉林省&apos;, &apos;黑龙江省&apos;, &apos;上海市&apos;, &apos;江苏省&apos;, &apos;浙江省&apos;, &apos;安徽省&apos;, &apos;福建省&apos;, &apos;江西省&apos;, &apos;山东省&apos;, &apos;河南省&apos;, &apos;湖北省&apos;, &apos;湖南省&apos;, &apos;广东省&apos;, &apos;广西壮族自治区&apos;, &apos;海南省&apos;, &apos;重庆市&apos;, &apos;四川省&apos;, &apos;贵州省&apos;, &apos;云南省&apos;, &apos;西藏自治区&apos;, &apos;陕西省&apos;, &apos;甘肃省&apos;, &apos;青海省&apos;, &apos;宁夏回族自治区&apos;, &apos;新疆维吾尔自治区&apos;]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pattern = <span class="string">"&lt;a\shref='(\d&#123;2&#125;\.html)'&gt;"</span></span><br><span class="line">herf = re.findall(pattern,html)</span><br><span class="line">print(herf)</span><br></pre></td></tr></table></figure><pre><code>[&apos;11.html&apos;, &apos;12.html&apos;, &apos;13.html&apos;, &apos;14.html&apos;, &apos;15.html&apos;, &apos;21.html&apos;, &apos;22.html&apos;, &apos;23.html&apos;, &apos;31.html&apos;, &apos;32.html&apos;, &apos;33.html&apos;, &apos;34.html&apos;, &apos;35.html&apos;, &apos;36.html&apos;, &apos;37.html&apos;, &apos;41.html&apos;, &apos;42.html&apos;, &apos;43.html&apos;, &apos;44.html&apos;, &apos;45.html&apos;, &apos;46.html&apos;, &apos;50.html&apos;, &apos;51.html&apos;, &apos;52.html&apos;, &apos;53.html&apos;, &apos;54.html&apos;, &apos;61.html&apos;, &apos;62.html&apos;, &apos;63.html&apos;, &apos;64.html&apos;, &apos;65.html&apos;]</code></pre><h3 id="用requests改写翻译程序"><a href="#用requests改写翻译程序" class="headerlink" title="用requests改写翻译程序"></a>用requests改写翻译程序</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_res</span><span class="params">()</span>:</span></span><br><span class="line">    url = <span class="string">"https://cn.bing.com/ttranslatev3?isVertical=1&amp;&amp;IG=146CE752C8724030AC9C494C78C399F5&amp;IID=translator.5028.2"</span></span><br><span class="line">    text = input(<span class="string">"please input words:"</span>)</span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">"from"</span>: <span class="string">"zh-Hans"</span>,</span><br><span class="line">        <span class="string">"to"</span>: <span class="string">"en"</span>,</span><br><span class="line">        <span class="string">"text"</span>: text</span><br><span class="line">    &#125;</span><br><span class="line">    response = requests.post(url=url,data=data)</span><br><span class="line">    <span class="keyword">return</span> response.json()[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">parser</span><span class="params">(data)</span>:</span></span><br><span class="line">    result = []</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> data[<span class="string">"translation"</span>]:</span><br><span class="line">        result.append(item[<span class="string">"normalizedTarget"</span>])</span><br><span class="line">    print(result)</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">()</span>:</span></span><br><span class="line">    data = get_res()</span><br><span class="line">    parser(data)</span><br><span class="line">    </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"main__"</span>:</span><br><span class="line">    run()</span><br></pre></td></tr></table></figure><h3 id="用requests改写b站评论程序"><a href="#用requests改写b站评论程序" class="headerlink" title="用requests改写b站评论程序"></a>用requests改写b站评论程序</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">crawler</span><span class="params">()</span>:</span></span><br><span class="line">    url = <span class="string">"https://api.bilibili.com/x/v2/reply/add"</span></span><br><span class="line">    headers = &#123;</span><br><span class="line">    <span class="string">"User - Agent"</span>: <span class="string">"Mozilla / 5.0(Windows NT 10.0;Win64;x64) AppleWebKit / 537.36(KHTML, likeGecko) Chrome / 79.0.3945.88Safari / 537.36"</span>,</span><br><span class="line">    <span class="string">"Accept"</span>: <span class="string">"application/json, text/javascript, */*; q=0.01"</span>,</span><br><span class="line">    <span class="string">"Accept - Encoding"</span>: <span class="string">"gzip, deflate,br"</span>,</span><br><span class="line">    <span class="string">"Accept - Language"</span>: <span class="string">"zh - CN,zh;q=0.9"</span>,</span><br><span class="line">    <span class="string">"Connection"</span>: <span class="string">"keep - alive"</span>,</span><br><span class="line">    <span class="string">"Content - Type"</span>: <span class="string">"application / x - www - form - urlencoded;charset = UTF - 8"</span>,</span><br><span class="line">    <span class="string">"Cookie"</span>: <span class="string">"__uuid=3DD3F5DC-AEDD-9BFB-285D-AB4B94DE77EB88182infoc; buvid3=FC9AE67F-B6B9-4F48-947F-414553F7D6C453947infoc; CURRENT_FNVAL=16; LIVE_BUVID=AUTO4915831167919064; rpdid=|(u)l~mlJk)R0J'ul)JuuY~mY; DedeUserID=398660826; DedeUserID__ckMd5=d8d5e050472f4e17; SESSDATA=78bb4560%2C1600162875%2C76f2c*31; bili_jct=56fa9bc1dd3cd7781bc15d651fed31fc; PVID=1; bsource=seo_baidu; sid=lyccl0az"</span>,</span><br><span class="line">    <span class="string">"Host"</span>: <span class="string">"api.bilibili.com"</span>,</span><br><span class="line">    <span class="string">"Origin"</span>: <span class="string">"https: // www.bilibili.com"</span>,</span><br><span class="line">    <span class="string">"Referer"</span>: <span class="string">"https://www.bilibili.com/video/BV1iE411d7ez?from=search&amp;seid=10276284139666162813"</span>,</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    form_data = &#123;</span><br><span class="line">        <span class="string">"oid"</span>: <span class="number">94775464</span>,</span><br><span class="line">        <span class="string">"type"</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="string">"message"</span>: <span class="string">"我币没了"</span>,</span><br><span class="line">        <span class="string">"plat"</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="string">"jsonp"</span>: <span class="string">"jsonp"</span>,</span><br><span class="line">        <span class="string">"csrf"</span>: <span class="string">"56fa9bc1dd3cd7781bc15d651fed31fc"</span></span><br><span class="line">    &#125;</span><br><span class="line">    response = requests.post(url=url,headers=headers,data=form_data)</span><br><span class="line">    result = json.loads(response.content.decode(<span class="string">"utf-8"</span>))</span><br><span class="line">    print(result[<span class="string">'data'</span>][<span class="string">'success_toast'</span>])</span><br><span class="line">    print(result[<span class="string">'data'</span>][<span class="string">'reply'</span>][<span class="string">'content'</span>][<span class="string">'message'</span>])</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">crawler()</span><br></pre></td></tr></table></figure><pre><code>发送成功我币没了</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;这次的作业是提取运用正则表达式提取省份的超链接，并且用requests改写翻译程序和b站评论程序&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>实战2：b站评论</title>
    <link href="http://yoursite.com/2020/04/21/%E5%AE%9E%E6%88%982%EF%BC%9Ab%E7%AB%99%E8%AF%84%E8%AE%BA/"/>
    <id>http://yoursite.com/2020/04/21/%E5%AE%9E%E6%88%982%EF%BC%9Ab%E7%AB%99%E8%AF%84%E8%AE%BA/</id>
    <published>2020-04-21T06:51:23.818Z</published>
    <updated>2020-04-21T06:58:20.212Z</updated>
    
    <content type="html"><![CDATA[<p>一直出错的gzip，没想到把那行代码删了直接就可以了，真的是很神奇。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"><span class="keyword">import</span> urllib.parse</span><br><span class="line"><span class="keyword">import</span> http.cookiejar</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">crawler</span><span class="params">()</span>:</span></span><br><span class="line">    url = <span class="string">"https://api.bilibili.com/x/v2/reply/add"</span></span><br><span class="line">    headers = &#123;</span><br><span class="line">    <span class="string">"User - Agent"</span>: <span class="string">"Mozilla / 5.0(Windows NT 10.0;Win64;x64) AppleWebKit / 537.36(KHTML, likeGecko) Chrome / 79.0.3945.88Safari / 537.36"</span>,</span><br><span class="line">    <span class="string">"Accept"</span>: <span class="string">"application/json, text/javascript, */*; q=0.01"</span>,</span><br><span class="line">    <span class="string">"Accept - Encoding"</span>: <span class="string">"gzip, deflate,br"</span>,</span><br><span class="line">    <span class="string">"Accept - Language"</span>: <span class="string">"zh - CN,zh;q=0.9"</span>,</span><br><span class="line">    <span class="string">"Connection"</span>: <span class="string">"keep - alive"</span>,</span><br><span class="line">    <span class="string">"Content - Type"</span>: <span class="string">"application / x - www - form - urlencoded;charset = UTF - 8"</span>,</span><br><span class="line">    <span class="string">"Cookie"</span>: <span class="string">"__uuid=3DD3F5DC-AEDD-9BFB-285D-AB4B94DE77EB88182infoc; buvid3=FC9AE67F-B6B9-4F48-947F-414553F7D6C453947infoc; CURRENT_FNVAL=16; LIVE_BUVID=AUTO4915831167919064; rpdid=|(u)l~mlJk)R0J'ul)JuuY~mY; DedeUserID=398660826; DedeUserID__ckMd5=d8d5e050472f4e17; SESSDATA=78bb4560%2C1600162875%2C76f2c*31; bili_jct=56fa9bc1dd3cd7781bc15d651fed31fc; PVID=1; bsource=seo_baidu; sid=lyccl0az"</span>,</span><br><span class="line">    <span class="string">"Host"</span>: <span class="string">"api.bilibili.com"</span>,</span><br><span class="line">    <span class="string">"Origin"</span>: <span class="string">"https: // www.bilibili.com"</span>,</span><br><span class="line">    <span class="string">"Referer"</span>: <span class="string">"https://www.bilibili.com/video/BV1iE411d7ez?from=search&amp;seid=10276284139666162813"</span>,</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    form_data = &#123;</span><br><span class="line">        <span class="string">"oid"</span>: <span class="number">94775464</span>,</span><br><span class="line">        <span class="string">"type"</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="string">"message"</span>: <span class="string">"直播"</span>,</span><br><span class="line">        <span class="string">"plat"</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="string">"jsonp"</span>: <span class="string">"jsonp"</span>,</span><br><span class="line">        <span class="string">"csrf"</span>: <span class="string">"56fa9bc1dd3cd7781bc15d651fed31fc"</span></span><br><span class="line">    &#125;</span><br><span class="line">    data = bytes(urllib.parse.urlencode(form_data),encoding=<span class="string">"utf-8"</span>)</span><br><span class="line">    request = urllib.request.Request(url=url,data=data,headers=headers)</span><br><span class="line">    cookie = http.cookiejar.CookieJar()</span><br><span class="line">    handler = urllib.request.HTTPCookieProcessor(cookie)</span><br><span class="line">    opener = urllib.request.build_opener(handler)</span><br><span class="line">    response = opener.open(request)</span><br><span class="line">    result=json.loads(response.read().decode(<span class="string">"utf-8"</span>))</span><br><span class="line">    print(result[<span class="string">'data'</span>][<span class="string">'success_toast'</span>])</span><br><span class="line">    print(result[<span class="string">'data'</span>][<span class="string">'reply'</span>][<span class="string">'content'</span>][<span class="string">'message'</span>])</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">       </span><br><span class="line">crawler()</span><br></pre></td></tr></table></figure><pre><code>发送成功直播</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;这次的实战内容是向b站发送评论，代码如下&quot;&gt;&lt;a href=&quot;#这次的实战内容是向b站发送评论，代码如下&quot; class=&quot;headerlink&quot; title=&quot;这次的实战内容是向b站发送评论，代码如下&quot;&gt;&lt;/a&gt;这次的实战内容是向b站发送评论，代码如下&lt;/h2&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>爬虫作业1</title>
    <link href="http://yoursite.com/2020/03/17/%E7%88%AC%E8%99%AB%E4%BD%9C%E4%B8%9A1/"/>
    <id>http://yoursite.com/2020/03/17/%E7%88%AC%E8%99%AB%E4%BD%9C%E4%B8%9A1/</id>
    <published>2020-03-17T11:45:19.316Z</published>
    <updated>2020-03-17T13:36:29.585Z</updated>
    
    <content type="html"><![CDATA[<h1 id="翻译程序"><a href="#翻译程序" class="headerlink" title="翻译程序"></a>翻译程序</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"><span class="keyword">import</span> urllib.parse</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">translate</span><span class="params">(text)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> text:  <span class="comment">#参数检验</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">'None'</span></span><br><span class="line">    url = <span class="string">"https://fanyi.baidu.com/sug"</span> <span class="comment">#请求网址</span></span><br><span class="line">    <span class="comment">#表单数据</span></span><br><span class="line">    params = &#123;</span><br><span class="line">        <span class="string">'kw'</span>:text</span><br><span class="line">    &#125;</span><br><span class="line">    data = urllib.parse.urlencode(params).encode(<span class="string">'utf-8'</span>)</span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">'user - Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.88 Safari/537.36'</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">#构造请求对象</span></span><br><span class="line">    req = urllib.request.Request(url=url,data=data,headers=headers)</span><br><span class="line">    <span class="comment">#发送请求，获得响应</span></span><br><span class="line">    response = urllib.request.urlopen(req)</span><br><span class="line">    <span class="comment">#解析数据</span></span><br><span class="line">    content = json.loads(response.read().decode(<span class="string">'utf-8'</span>))</span><br><span class="line">    <span class="keyword">if</span> content[<span class="string">'errno'</span>] == <span class="number">0</span>:  <span class="comment">#一切正常</span></span><br><span class="line">        result = content[<span class="string">'data'</span>][<span class="number">0</span>][<span class="string">'v'</span>]</span><br><span class="line">    <span class="keyword">else</span>: <span class="comment">#发生错误</span></span><br><span class="line">        result = <span class="string">'Error'</span></span><br><span class="line">    <span class="comment">#返回结果</span></span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        text = input(<span class="string">'翻译内容:'</span>)</span><br><span class="line">        result = translate(text)</span><br><span class="line">        print(<span class="string">"翻译结果:%s"</span> % result)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这次的作业是使用urllib模块来修改翻译程序，使用户可以输入需要翻译的内容，但只能翻译单个词语。&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>学习笔记2</title>
    <link href="http://yoursite.com/2020/03/13/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B02/"/>
    <id>http://yoursite.com/2020/03/13/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B02/</id>
    <published>2020-03-13T12:45:43.590Z</published>
    <updated>2020-03-17T13:41:58.152Z</updated>
    
    <content type="html"><![CDATA[<h1 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h1><p>函数是组织好的，可重复使用的，用来实现单一，或相关联功能的代码段。 函数能提高应用的模块性，和代码的重复利用率。你已经知道Python提供了许多内建函数，比如print()。但你也可以 自己创建函数，这被叫做用户自定义函数。 </p><h2 id="定义一个函数"><a href="#定义一个函数" class="headerlink" title="定义一个函数"></a>定义一个函数</h2><p>你可以定义一个由自己想要功能的函数，以下是简单的规则:</p><ul><li>函数代码块以 def 关键词开头，后接函数标识符名称和圆括号()。 </li><li>任何传入参数和自变量必须放在圆括号中间。圆括号之间可以用于定义参数.</li><li>函数的第一行语句可以选择性地使用文档字符串—用于存放函数说明</li><li>函数内容以冒号起始，并且缩进。 </li><li>return [表达式] 结束函数，选择性地返回一个值给调用方。不带表达式的return相当于返回 None。</li></ul><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">function</span><span class="params">()</span>:</span></span><br><span class="line">   <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">function</span><span class="params">()</span>:</span></span><br><span class="line">   <span class="keyword">return</span> [返回值]</span><br></pre></td></tr></table></figure><h2 id="函数的使用"><a href="#函数的使用" class="headerlink" title="函数的使用"></a>函数的使用</h2><p>定义一个函数只给了函数一个名称，指定了函数里包含的参数，和代码块结构。<br>这个函数的基本结构完成以后，并不会执行，只有当被调用的时候才会被执行。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fmt</span><span class="params">()</span>:</span></span><br><span class="line">   print(<span class="string">'被调用了'</span>)</span><br><span class="line"></span><br><span class="line">fmt()</span><br></pre></td></tr></table></figure><p>当函数使用了return时，需要一个载体来接受这个返回的结果，不然这个结果就会瞬间被python解释器释放。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">retuen_sth</span><span class="params">()</span>:</span></span><br><span class="line">   <span class="keyword">return</span> <span class="string">'获取返回值'</span></span><br><span class="line"></span><br><span class="line">print(retuen_sth())</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">retuen_sth</span><span class="params">()</span>:</span></span><br><span class="line">   <span class="keyword">return</span> <span class="string">'获取返回值'</span></span><br><span class="line">msg = retuen_sth()</span><br><span class="line">print(msg)</span><br></pre></td></tr></table></figure><h2 id="函数的参数"><a href="#函数的参数" class="headerlink" title="函数的参数"></a>函数的参数</h2><p>就像数学中的函数一样，Python内置的函数以及我们自己定义的函数都是可以有参数的，这个参数在我们使用这个函 数的时候传入，函数参数的作用是传递数据给函数使用。</p><ul><li>必备参数 </li><li>关键字参数 </li><li>不定长参数 </li><li>默认参数 </li></ul><p>函数括号内的参数称为形式参数，也叫形参，在我们实际调用函数时传入的参数成为实际参数，也叫实参。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fmt</span><span class="params">(str)</span>:</span></span><br><span class="line">   print(str)</span><br><span class="line"></span><br><span class="line">fmt(<span class="string">'参数传递'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span><span class="params">(a,b)</span>:</span></span><br><span class="line">   print(a + b)</span><br><span class="line"></span><br><span class="line">add(b=<span class="number">3</span>,a=<span class="number">4</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">(*args)</span>:</span></span><br><span class="line">   print(args)</span><br><span class="line"></span><br><span class="line">func(<span class="string">'name'</span>,<span class="string">'age'</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func_doc</span><span class="params">(*args,**kwargs)</span>:</span></span><br><span class="line">   print(args)</span><br><span class="line">   print(kwargs)</span><br><span class="line">    </span><br><span class="line">func_doc(<span class="string">'name'</span>,<span class="string">'age'</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,name=<span class="string">'tony'</span>,age=<span class="string">'20'</span>)</span><br></pre></td></tr></table></figure><h2 id="函数作为对象"><a href="#函数作为对象" class="headerlink" title="函数作为对象"></a>函数作为对象</h2><p> Python是面向对象极为彻底的语言，在Python中万物皆对象，函数也不例外，我们可以将函数赋值给一个变量，我们 也可以将函数作为函数的返回值。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span><span class="params">(a,b)</span>:</span></span><br><span class="line">   print(a + b)</span><br><span class="line"></span><br><span class="line">func = add</span><br><span class="line">print(func(<span class="number">3</span>,<span class="number">4</span>))</span><br></pre></td></tr></table></figure><p><em>注意</em>：在将函数作为对象赋值给变量或作为返回值的时候是不能加括号的，加上括号就是调用函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mul</span><span class="params">(a,x)</span>:</span></span><br><span class="line">   <span class="keyword">return</span> a ** x</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">none</span><span class="params">()</span>:</span></span><br><span class="line">   <span class="keyword">return</span> mul</span><br><span class="line"></span><br><span class="line">func = none()</span><br><span class="line">print(func(<span class="number">3</span>,<span class="number">4</span>))</span><br></pre></td></tr></table></figure><h2 id="递归"><a href="#递归" class="headerlink" title="递归"></a>递归</h2><p>  递归是程序调用自身的一种编程技巧，一个过程或函数在其定义或说明中有直接或间接调用自身的一种方法，它通常 把一个大型复杂的问题层层转化为一个与原问题相似的规模较小的问题来求解，递归策略只需少量的程序就可描述出解题 过程所需要的多次重复计算，大大地减少了程序的代码量。递归的能力在于用有限的语来定义对象的无限集合。一般来 说，递归需要有边界条件、递归前进段和递归返回段。当边界条件不满足时，递归前进；当边界条件满足时，递归返回。<br>  <em>注意</em>:当运行空间复杂度较高的程序时，不建议对它使用递归，因为这样会占用大量的计算机内存，并且会时间上也并不高效。<br> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1-n之和</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">factoral</span><span class="params">(x)</span>:</span></span><br><span class="line">   <span class="keyword">if</span> x == <span class="number">1</span>:</span><br><span class="line">      <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">   <span class="keyword">return</span> factoral(x - <span class="number">1</span>) + x</span><br><span class="line"></span><br><span class="line">a = factoral(<span class="number">4</span>)</span><br><span class="line">print(a)</span><br></pre></td></tr></table></figure></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># n的阶乘</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">factoral</span><span class="params">(x)</span>:</span></span><br><span class="line">   <span class="keyword">if</span> x == <span class="number">1</span>:</span><br><span class="line">      <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">   <span class="keyword">return</span> factoral(x - <span class="number">1</span>) * x</span><br><span class="line"></span><br><span class="line">a = factoral(<span class="number">4</span>)</span><br><span class="line">print(a)</span><br></pre></td></tr></table></figure><h3 id="递归求斐波那契数列"><a href="#递归求斐波那契数列" class="headerlink" title="递归求斐波那契数列"></a>递归求斐波那契数列</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fibonacci</span><span class="params">(n)</span>:</span></span><br><span class="line">   <span class="keyword">if</span> n == <span class="number">1</span>:</span><br><span class="line">      <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">   <span class="keyword">if</span> n == <span class="number">2</span>:</span><br><span class="line">      <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">   <span class="keyword">return</span> fibonacci(n - <span class="number">1</span>) + fibonacci(n - <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">i = fibonacci(<span class="number">7</span>)</span><br><span class="line">print(i)</span><br></pre></td></tr></table></figure><h3 id="函数运用"><a href="#函数运用" class="headerlink" title="函数运用"></a>函数运用</h3><p>使用了Python标准库中的collections模块中的Counter数据结构，这是一个容器数据结构，可以直接计算出对象中重复 元素的个数。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> jieba</span><br><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> counter</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">count</span><span class="params">()</span>:</span></span><br><span class="line">    f = open(<span class="string">'射雕英雄传第一回.txt'</span>, <span class="string">'r'</span>, encoding=<span class="string">'utf-8'</span>)</span><br><span class="line">    text = f.read()</span><br><span class="line">    f.close()</span><br><span class="line">    words = jieba.lcut(text)</span><br><span class="line">    word_count = counter(words)</span><br><span class="line">    <span class="keyword">return</span> word_count</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                                                       </span><br><span class="line">if__name__ == <span class="string">'_main_'</span>:</span><br><span class="line">   word_count = count()</span><br><span class="line">   print(word_count)</span><br></pre></td></tr></table></figure><h2 id="网络爬虫基础"><a href="#网络爬虫基础" class="headerlink" title="网络爬虫基础"></a>网络爬虫基础</h2><h3 id="什么是爬虫"><a href="#什么是爬虫" class="headerlink" title="什么是爬虫"></a>什么是爬虫</h3><p>爬虫是一种按照一定的规则，自动抓取万维网信息的程序或脚本</p><h3 id="爬虫的基本组成"><a href="#爬虫的基本组成" class="headerlink" title="爬虫的基本组成"></a>爬虫的基本组成</h3><ul><li>URL管理模块</li><li>HTML下载模块</li><li>HTML解析模块</li><li>数据存储模块</li><li>爬虫调度模块</li></ul><h3 id="常用的PYTHON爬虫模块"><a href="#常用的PYTHON爬虫模块" class="headerlink" title="常用的PYTHON爬虫模块"></a>常用的PYTHON爬虫模块</h3><ul><li>requests</li><li>scrapy</li><li>pyspider</li><li>selenium</li></ul><h3 id="GET请求"><a href="#GET请求" class="headerlink" title="GET请求"></a>GET请求</h3><ul><li>参数，关键信息在URL中</li></ul><h3 id="POST请求"><a href="#POST请求" class="headerlink" title="POST请求"></a>POST请求</h3><ul><li>Form Data</li><li>Request Payload</li></ul><h3 id="常用的解析方法"><a href="#常用的解析方法" class="headerlink" title="常用的解析方法"></a>常用的解析方法</h3><ul><li>Css选择器</li><li>Xpath</li><li>正则表达式</li></ul><h3 id="数据存储"><a href="#数据存储" class="headerlink" title="数据存储"></a>数据存储</h3><ul><li>文本存储csv等</li><li>Mongo</li><li>Redis</li><li>Mysql</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;本片文章主要写了python中函数的使用方法&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>学习笔记1</title>
    <link href="http://yoursite.com/2020/02/22/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B01/"/>
    <id>http://yoursite.com/2020/02/22/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B01/</id>
    <published>2020-02-22T06:10:42.573Z</published>
    <updated>2020-03-19T09:02:52.801Z</updated>
    
    <content type="html"><![CDATA[<h2 id="怎样切换目录盘"><a href="#怎样切换目录盘" class="headerlink" title="怎样切换目录盘"></a>怎样切换目录盘</h2><p>例如：C:\用户\86157\Z:<br>切换到某个目录：Z:\cd 目录名称</p><h2 id="部署博客流程"><a href="#部署博客流程" class="headerlink" title="部署博客流程"></a>部署博客流程</h2><p>文章写好后，在终端分别输入：hexo clean(清除文件包), hexo g(重新生成文件), hexo d(部署到博客上)</p><h2 id="jupyter-notebook使用方法"><a href="#jupyter-notebook使用方法" class="headerlink" title="jupyter notebook使用方法"></a>jupyter notebook使用方法</h2><h3 id="命令模式"><a href="#命令模式" class="headerlink" title="命令模式"></a>命令模式</h3><p>蓝色 编辑模式进入命令模式：ESC</p><h3 id="编辑模式"><a href="#编辑模式" class="headerlink" title="编辑模式"></a>编辑模式</h3><p>绿色 命令模式进入编辑模式：enter</p><h3 id="一些快捷键的使用"><a href="#一些快捷键的使用" class="headerlink" title="一些快捷键的使用"></a>一些快捷键的使用</h3><p>shift+enter: 运行当前代码块，且光标进入下面的代码块<br>ctrl+enter: 运行当前代码块，并且光标停留在当前代码块<br>dd: 删除当前代码块<br>b: 在下方添加一个空代码块<br>a: 在上方添加一个空代码块<br>m: 将编程语言代码块变成Markdown代码块<br>y: 将Markdown代码块变成编程语言代码块</p><h3 id="超链接-链接网址和图片使用方法"><a href="#超链接-链接网址和图片使用方法" class="headerlink" title="超链接(链接网址和图片使用方法)"></a>超链接(链接网址和图片使用方法)</h3><p><a href="http://www.python.org/" target="_blank" rel="noopener">python</a><br><img src="http://wiki.komica.org/pix/img14966.jpg" alt="图片"></p><h3 id="一些Markdown语法"><a href="#一些Markdown语法" class="headerlink" title="一些Markdown语法"></a>一些Markdown语法</h3><ul><li>第一点</li><li>第二点</li></ul><ol><li>第一</li><li>第二<br>$$z=x+y$$<br>$$\frac{2}{x+y}$$<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">"hello,word"</span>)</span><br></pre></td></tr></table></figure><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3></li></ol><p><strong>加粗</strong></p><p><em>斜体</em></p><h1 id="Python数据类型"><a href="#Python数据类型" class="headerlink" title="Python数据类型"></a>Python数据类型</h1><h2 id="列表-list"><a href="#列表-list" class="headerlink" title="列表(list)"></a>列表(list)</h2><ul><li>列表是Python中最常用的数据类型</li><li>列表中可以容纳不同的数据类型</li><li>列表是一种可变序列</li><li>列表可以通过索引访问元素(和字符串一样索引是从0开始)</li><li>列表支持切片运算<br>列表的创建:</li><li>使用[]创建列表，元素之间使用逗号隔开,</li><li>list()创建列表</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 创建空列表的两种方法</span><br><span class="line">squ1 &#x3D; []</span><br><span class="line">squ2 &#x3D; list()</span><br><span class="line"></span><br><span class="line"># 创建含有元素的列表</span><br><span class="line">squ3 &#x3D; [1,2,3,&quot;a&quot;]</span><br></pre></td></tr></table></figure><h3 id="len"><a href="#len" class="headerlink" title="len()"></a>len()</h3><p>  使用len函数可以查看列表的长度</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">squ = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line">length = len(squ)</span><br><span class="line">print(length)</span><br></pre></td></tr></table></figure><h3 id="切片"><a href="#切片" class="headerlink" title="切片"></a>切片</h3><p>[start:end:step]</p><ul><li>start起始位置</li><li>end结束位置</li><li>step步长，默认是1，step为正数时，从左到右；负数时，从右到左</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">list1 &#x3D; [0,1,2,4,5,6,7]</span><br><span class="line">print(list1[:5])</span><br><span class="line"># 切片反转元素</span><br><span class="line">print(list1[::-1])</span><br></pre></td></tr></table></figure><pre><code>[0, 1, 2, 4, 5][7, 6, 5, 4, 2, 1, 0]</code></pre><h3 id="append"><a href="#append" class="headerlink" title="append()"></a>append()</h3><p>使用append()方法可以向列表末尾添加元素</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">squ &#x3D; [1,2,3]</span><br><span class="line">squ.append(4)</span><br><span class="line">print(squ)</span><br></pre></td></tr></table></figure><pre><code>[1, 2, 3, 4]</code></pre><h3 id="pop"><a href="#pop" class="headerlink" title="pop()"></a>pop()</h3><p>使用pop()方法可以删除列表指定位置的元素，并返回指定位置元素的值，不指定位置则删除末尾元素</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">squ &#x3D; [100,66,34,17]</span><br><span class="line">a &#x3D; squ.pop()</span><br><span class="line">print(a)</span><br><span class="line">print(squ)</span><br><span class="line">b &#x3D; squ.pop(2)</span><br><span class="line">print(b)</span><br><span class="line">print(squ)</span><br></pre></td></tr></table></figure><pre><code>17[100, 66, 34]34[100, 66]</code></pre><h3 id="extend"><a href="#extend" class="headerlink" title="extend()"></a>extend()</h3><p>extend()方法一次性向列表末尾添加多个元素，对象可以直接为列表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">squ1 &#x3D; [100,66,22,88]</span><br><span class="line">squ2 &#x3D; [98,77,34]</span><br><span class="line">squ1.extend(squ2)</span><br><span class="line">print(squ1)</span><br></pre></td></tr></table></figure><pre><code>[100, 66, 22, 88, 98, 77, 34]</code></pre><h3 id="in-not-in"><a href="#in-not-in" class="headerlink" title="in/not in"></a>in/not in</h3><p>使用in或者not in 可以判断一个元素在不在列表中，返回值为True/False</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">squ &#x3D; [&quot;A&quot;,&quot;B&quot;,&quot;C&quot;,&quot;D&quot;]</span><br><span class="line">print(&quot;A&quot; in squ)</span><br><span class="line">print(&quot;a&quot; not in squ)</span><br><span class="line">print(&quot;F&quot; in squ)</span><br></pre></td></tr></table></figure><pre><code>TrueTrueFalse</code></pre><h3 id="remove"><a href="#remove" class="headerlink" title="remove()"></a>remove()</h3><p>remove()用于按值删除元素，找到第一个符合的元素然后删除</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">squ &#x3D;[1,2,3,1,2,3]</span><br><span class="line">squ.remove(1)</span><br><span class="line">print(squ)</span><br></pre></td></tr></table></figure><pre><code>[2, 3, 1, 2, 3]</code></pre><h3 id="嵌套列表"><a href="#嵌套列表" class="headerlink" title="嵌套列表"></a>嵌套列表</h3><p>在上面的代码中，列表存放了整型，浮点型，字符串类型的元素，列表中也可以嵌套列表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">squ &#x3D; [1,2,3,[3,4]]</span><br><span class="line">print(squ[3][0])</span><br></pre></td></tr></table></figure><pre><code>3</code></pre><h2 id="元组-tuple"><a href="#元组-tuple" class="headerlink" title="元组(tuple)"></a>元组(tuple)</h2><p>元组(tuple) Python元组与列表类似，不同之处在于元组的元素无法修改，元组使用小括号 () ，元组是不可变数据类型，不能修 改或删除元素，也不能添加元素。列表使用方括号 []，另外列表是一个可变类型的数据。</p><p>元组也可以容纳不同的数据类型。</p><h3 id="元组的创建"><a href="#元组的创建" class="headerlink" title="元组的创建"></a>元组的创建</h3><p>使用 () 就可以创建元组，元素之间使用英文逗号 , 隔开</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tup = (<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)</span><br><span class="line">print(tup)</span><br></pre></td></tr></table></figure><h3 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h3><p>元组也可以使用索引访问元素</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tup = (<span class="number">1</span>, <span class="number">20</span>, <span class="number">3</span>, <span class="number">40</span>, [<span class="number">5</span>, <span class="number">60</span>]) </span><br><span class="line">print(tup[<span class="number">1</span>])</span><br><span class="line">print(tup[<span class="number">4</span>][<span class="number">0</span>])</span><br></pre></td></tr></table></figure><h3 id="切片-1"><a href="#切片-1" class="headerlink" title="切片"></a>切片</h3><p>元组也可以通过切片获取元素</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tup = (<span class="number">1</span>,<span class="number">20</span>,<span class="number">3</span>,<span class="number">40</span>,[<span class="number">5</span>,<span class="number">60</span>])</span><br><span class="line">print([<span class="number">1</span>:<span class="number">3</span>])</span><br></pre></td></tr></table></figure><h3 id="修改元组中的列表"><a href="#修改元组中的列表" class="headerlink" title="修改元组中的列表"></a>修改元组中的列表</h3><p>元组是不可变的类型，前面说过元组中的元素不可以修改，但是如果元组中嵌套了列表，那么就可以修改这个列表</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tup = (<span class="number">1</span>,<span class="number">20</span>,<span class="number">3</span>,<span class="number">40</span>,[<span class="number">5</span>,<span class="number">60</span>])</span><br><span class="line">tup[<span class="number">4</span>][<span class="number">0</span>] = <span class="number">50</span></span><br><span class="line">print(tup)</span><br></pre></td></tr></table></figure><p><strong>注意:这种修改元组的方式是不推荐的，尽量不要使用这种方式,我们默认元组就是不可修改的</strong></p><h3 id="元组拆包"><a href="#元组拆包" class="headerlink" title="元组拆包"></a>元组拆包</h3><p>想要取出元组中的元素，可以使用元组拆包</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a, b = (<span class="number">100</span>, <span class="number">55</span>) </span><br><span class="line">print(a, b)</span><br></pre></td></tr></table></figure><p>如果元组中存在不想要的元素，可使用占位符</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tup = (<span class="string">"c"</span>, <span class="string">"java"</span>, <span class="string">"python"</span>) </span><br><span class="line">_, _, a = tup() </span><br><span class="line">print(a)</span><br></pre></td></tr></table></figure><p>如果元组中元素很多可以使用 * 表示任意多个元素（在元组长度范围之内）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tup = (<span class="string">"四川省"</span>, <span class="string">"成都市"</span>, <span class="string">"龙泉驿去"</span>, <span class="string">"十陵街道"</span>, <span class="string">"成都大学"</span>) </span><br><span class="line">*_, school = tup </span><br><span class="line">print(school)</span><br></pre></td></tr></table></figure><p>其实 a, b = b, a ， a, b, c = 10, “python”, 3 这样的写法就是元组拆包的运用</p><h3 id="特别注意"><a href="#特别注意" class="headerlink" title="特别注意"></a>特别注意</h3><p>如果一个元组对象中只有一个元素，那么这个元素后面一定要接一个 , （逗号）不然这个对像就不是元组类型</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tup = (<span class="number">1</span>,) </span><br><span class="line">print(type(tup)) </span><br><span class="line">tup = (<span class="number">1</span>) </span><br><span class="line">print(type(tup))</span><br></pre></td></tr></table></figure><h3 id="占位符"><a href="#占位符" class="headerlink" title="%占位符"></a>%占位符</h3><p>但是上面的代码写起来似乎有点麻烦，且不太美观，所以我们可以使用占位符来表示</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">name = <span class="string">"托尼"</span></span><br><span class="line">age = <span class="string">"20"</span> </span><br><span class="line">profession = <span class="string">"理发师"</span> </span><br><span class="line">print(<span class="string">"我的名字叫%s，我的年龄是%s，我的职业是%s。"</span> % (name, age, profession))</span><br></pre></td></tr></table></figure><p>保存后运行代码，我们可以发现结果还是一样的<br><strong>我的名字叫托尼，我的年龄是20，我的职业是理发师。</strong></p><h3 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符"></a>转义字符</h3><p>“转义字符” 顾名思义就是能将字符意思改变的符号，转义字符 \ 可以转义很多字符，比如 \n 表示换行， \t 表示 制表符，字符 \ 本身也要转义，所以 \ 表示的字符就是 \ 。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;这次的笔记主要有博客简单部署流程和python的基础知识&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>我的第一篇博客</title>
    <link href="http://yoursite.com/2020/02/18/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/"/>
    <id>http://yoursite.com/2020/02/18/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</id>
    <published>2020-02-18T13:08:13.000Z</published>
    <updated>2020-03-17T13:59:37.624Z</updated>
    
    <content type="html"><![CDATA[<h2 id="哈哈"><a href="#哈哈" class="headerlink" title="哈哈"></a>哈哈</h2><p>我今天终于搭建了属于自己的博客了，虽然过程很艰辛，但终究是成功了</p><h2 id="心情"><a href="#心情" class="headerlink" title="心情"></a>心情</h2><p>今天非常开心呀，又学到了一个新的东西</p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>作者：一个菜鸟<br>请勿抄袭</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;哈哈&quot;&gt;&lt;a href=&quot;#哈哈&quot; class=&quot;headerlink&quot; title=&quot;哈哈&quot;&gt;&lt;/a&gt;哈哈&lt;/h2&gt;&lt;p&gt;我今天终于搭建了属于自己的博客了，虽然过程很艰辛，但终究是成功了&lt;/p&gt;
&lt;h2 id=&quot;心情&quot;&gt;&lt;a href=&quot;#心情&quot; class=&quot;
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>第一天</title>
    <link href="http://yoursite.com/2020/02/18/%E7%AC%AC%E4%B8%80%E5%A4%A9/"/>
    <id>http://yoursite.com/2020/02/18/%E7%AC%AC%E4%B8%80%E5%A4%A9/</id>
    <published>2020-02-18T09:18:07.000Z</published>
    <updated>2020-02-18T13:19:18.998Z</updated>
    
    <content type="html"><![CDATA[<h2 id="哈哈"><a href="#哈哈" class="headerlink" title="哈哈"></a>哈哈</h2><p>我终于能写博客了</p><h2 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h2><p>今天的课非常懵，春春上的太快了</p><h2 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h2><p>以后也要好好学习</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;哈哈&quot;&gt;&lt;a href=&quot;#哈哈&quot; class=&quot;headerlink&quot; title=&quot;哈哈&quot;&gt;&lt;/a&gt;哈哈&lt;/h2&gt;&lt;p&gt;我终于能写博客了&lt;/p&gt;
&lt;h2 id=&quot;过程&quot;&gt;&lt;a href=&quot;#过程&quot; class=&quot;headerlink&quot; title=&quot;过程&quot;&gt;&lt;
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2020/02/18/hello-world/"/>
    <id>http://yoursite.com/2020/02/18/hello-world/</id>
    <published>2020-02-18T08:41:38.512Z</published>
    <updated>2020-02-18T08:41:38.514Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
